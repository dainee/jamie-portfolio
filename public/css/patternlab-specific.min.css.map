{"version":3,"sources":["../../source/assets/css/patternlab-specific.scss","../../source/assets/css/_partials/_patternlab-specific/_colors.scss","../../source/assets/css/_partials/_global/_mixins.scss","../../source/assets/css/_partials/_global/_variables.scss","../../source/assets/css/_partials/_patternlab-specific/_fonts.scss","../../source/assets/css/patternlab-specific.css","../../source/assets/css/_partials/_global/_icons.scss","../../source/assets/css/_partials/_patternlab-specific/_icons.scss"],"names":[],"mappings":"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","file":"patternlab-specific.min.css","sourcesContent":["/////\n///// This stylesheet is for styles you want to include only when displaying demo\n///// styles for grids, animations, color swatches, etc.\n///// These styles will not be your production CSS.\n///// \n@import 'global-imports';\n\n#sg-patterns { // sass-lint:disable-line no-ids\n\tbox-sizing: border-box !important; // sass-lint:disable-line no-important\n\tmax-width: 100%;\n\tpadding: 0 .5em;\n}\n\n.sg-label {\n\tfont-size: 90%;\n\tline-height: 1;\n}\n\n.sg-panel {\n\twidth: 60%;\n\tmargin: 30px auto;\n\tpadding: 30px;\n\ttext-align: center;\n}\n\n@import '_partials/_patternlab-specific/colors';\n@import '_partials/_patternlab-specific/fonts';\n@import '_partials/_patternlab-specific/icons';\n",".sg-colors {\n\t@include no-custom-bullets;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tmargin: 0 !important; // sass-lint:disable-line no-important\n\tpadding: 0 !important; // sass-lint:disable-line no-important\n\tlist-style: none !important; // sass-lint:disable-line no-important\n\n\tli {\n\t\tflex: 0 1 auto;\n\t\tmin-width: 15%;\n\t\tmax-width: 40%;\n\t\tmargin: 0 15px 15px 0;\n\t\tpadding: 10px 20px;\n\t\tborder: 5px solid $color-white;\n\t\tbox-shadow: 0 0 2px $color-border;\n\n\t\t&:after {\n\t\t\tdisplay: block;\n\t\t\tmargin-top: rem-calc(5);\n\t\t\tfont-size: 70%;\n\t\t}\n\t}\n}\n\n.sg-colors--black {\n\tbackground: $color-black;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-black}'; }\n}\n\n.sg-colors--white {\n\tbackground: $color-white;\n\n\t&:after { content: '#{$color-white}'; }\n}\n\n.sg-colors--gray-light {\n\tbackground: $color-gray-light;\n\tcolor: $color-gray-dark;\n\n\t&:after { content: '#{$color-gray-light}'; }\n}\n\n.sg-colors--gray {\n\tbackground: $color-gray;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-gray}'; }\n}\n\n.sg-colors--gray-dark {\n\tbackground: $color-gray-dark;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-gray-dark}'; }\n}\n\n\n.sg-colors--blue {\n\tbackground: $color-blue;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-blue}'; }\n}\n","// Remove the unit of a length - https://css-tricks.com/snippets/sass/strip-unit-function/\n// @param {Number} $number - Number to remove unit from\n// @return {Number} - Unitless number\n@function strip-unit($number) {\n\t@if type-of($number) == 'number' and not unitless($number) {\n\t\t@return $number / ($number * 0 + 1);\n\t}\n\n\t@return $number;\n}\n\n// Convert from pixels to rems\n// @param {Number} $value - Value in pixels (can be unitless, px is assumeed) to be converted\n// @param {Number} $base - Optional. The base font-size to use (16px is default)\n// @return {Number} - Value in rems\n@function rem-calc($value, $base: 16px) {\n\t@return ((strip-unit($value) * 1px) / $base) * 1rem;\n}\n\n// Exponent function - https://css-tricks.com/snippets/sass/power-function/\n// @param {Number} $number - The base\n// @param {Number} $exponent - The exponent (integers only)\n// @return {Number} - the evaluated result\n@function pow($number, $exponent) {\n\t$value: 1;\n\n\t@if $exponent > 0 {\n\t\t@for $i from 1 through $exponent {\n\t\t\t$value: $value * $number;\n\t\t}\n\t} @else if $exponent < 0 {\n\t\t@for $i from 1 through -$exponent {\n\t\t\t$value: $value / $number;\n\t\t}\n\t}\n\n\t@return $value;\n}\n\n// Replaces instances of a string with another string - http://www.sassmeister.com/gist/1b4f2da5527830088e4d)\n// @param {String} $string - the string that has things being replaced in\n// @param {String} $search - the string to be replaced\n// @param {String} $replace - Optional. The string that will be inserted instead of $search. Defaults to nothing (just removes $search)\n// @return {String} - The string with the $search substrings replaced with $replace\n@function str-replace($string, $search, $replace: '') {\n\t$index: str-index($string, $search);\n\t@if $index {\n\t\t@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n\t}\n\t@return $string;\n}\n\n// Shortcut to get font-size from map without writing out map-get\n// @param {String} $key - the name of the font-size in the map in _global/_variables\n// @return {Number} - The value of the font-size from the map in _global/_variables\n@function fs($key) {\n\t@if map-has-key($font-sizes, $key) {\n\t\t@return map-get($font-sizes, $key);\n\t}\n\n\t@warn 'Unknown \"#{$key}\" in map.';\n\t@return null;\n}\n\n// Shortcut to get PRIMARY font-weight from map without writing out map-get\n// @param {String} $key - the name of the font-weight in the map in _global/_variables\n// @return {Number} - The value of the font-weight from the map in _global/_variables\n@function fwp($key) {\n\t@if map-has-key($font-weights-primary, $key) {\n\t\t@return map-get($font-weights-primary, $key);\n\t}\n\n\t@warn 'Unknown \"#{$key}\" in map.';\n\t@return null;\n}\n\n// Shortcut to get SECONDARY font-weight from map without writing out map-get\n// @param {String} $key - the name of the font-weight in the map in _global/_variables\n// @return {Number} - The value of the font-weight from the map in _global/_variables\n@function fws($key) {\n\t@if map-has-key($font-weights-secondary, $key) {\n\t\t@return map-get($font-weights-secondary, $key);\n\t}\n\n\t@warn 'Unknown \"#{$key}\" in map.';\n\t@return null;\n}\n\n// Convert from rems to px\n// @param {Number} $value - Value in rems (can be unitless, rem is assumed) to be converted\n// @param {Number} $base - Optional. The base font-size to use (16px is default)\n// @return {Number} - Value in pixels\n@function un-rem-calc($value, $base: 16px) {\n    @return strip-unit($value) * $base;\n}\n\n// URL-encodes a string https://codepen.io/kevinweber/pen/dXWoRw\n// @param {String} $str - the string to be encoded\n// @return {String} - the encoded string\n@function url-encode($str) {\n\t$encoding-reference: (\n\t\t//('%', '%25'),  // Encode \"%\" first, otherwise the \"%\" from encoded code would be encoded again (which would be bad)\n\t\t('<', '%3C'),\n\t\t('>', '%3E'),\n\t\t//('\"', '%22'),  // Replace \" with ' because that's shorter than %22 and normally working\n\t\t('\"', '\\''),\n\t\t('#', '%23'),\n\t\t('&', '%26'),\n\t\t// Here are a few more characters you could encode\n\t\t//(' ', '%20'),\n\t\t//('!', '%21'),\n\t\t//('$', '%24'),\n\t\t//(',', '%27'),\n\t\t//('(', '%28'),\n\t\t//(')', '%29'),\n\t\t//('*', '%2A'),\n\t\t//('+', '%2B'),\n\t\t//('\"', '%2C'),\n\t\t//('/', '%2F'),\n\t\t//(':', '%3A'),\n\t\t//(';', '%3B'),\n\t\t//('=', '%3D'),\n\t\t//('?', '%3F'),\n\t\t//('@', '%40'),\n\t\t//('[', '%5B'),\n\t\t//(']', '%5D'),\n\t\t//('^', '%5E'),\n\t\t//('`', '%60'),\n\t\t//('{', '%7B'),\n\t\t//('|', '%7C'),\n\t\t//('}', '%7D'),\n\t\t//('~', '%7E'),\n\t\t//(',', '%E2%80%9A'),\n\t\t//('\\\\', '%5C'),\n\t\t//('_', '%5F'),\n\t\t//('-', '%2D'),\n\t\t//('.', '%2E'),\n\t\t// ('\\', '%5C'),\n\t\t// (' ', '%7F'),\n\t\t// ('`', '%E2%82%AC'),\n\t\t//('ƒ', '%C6%92'),\n\t\t//('„', '%E2%80%9E'),\n\t\t//('…', '%E2%80%A6'),\n\t\t//('†', '%E2%80%A0'),\n\t\t//('‡', '%E2%80%A1'),\n\t\t//('ˆ', '%CB%86'),\n\t\t//('‰', '%E2%80%B0'),\n\t\t//('Š', '%C5%A0'),\n\t\t//('‹', '%E2%80%B9'),\n\t\t//('Œ', '%C5%92'),\n\t\t//('', '%C5%8D'),\n\t\t//('Ž', '%C5%BD'),\n\t\t//('', '%8F'),\n\t\t//('', '%C2%90'),\n\t\t//(', '%'E2%80%98'),\n\t\t//(', '%'E2%80%99'),\n\t\t//('“', '%E2%80%9C'),\n\t\t//('”', '%E2%80%9D'),\n\t\t//('•', '%E2%80%A2'),\n\t\t//('–', '%E2%80%93'),\n\t\t//('—', '%E2%80%94'),\n\t\t//('˜', '%CB%9C'),\n\t\t//('™', '%E2%84'),\n\t\t//('š', '%C5%A1'),\n\t\t//('›', '%E2%80'),\n\t\t//('œ', '%C5%93'),\n\t\t//('', '%9D'),\n\t\t//('ž', '%C5%BE'),\n\t\t//('Ÿ', '%C5%B8'),\n\t\t//(' ', '%C2%A0'),\n\t\t//('¡', '%C2%A1'),\n\t\t//('¢', '%C2%A2'),\n\t\t//('£', '%C2%A3'),\n\t\t//('¤', '%C2%A4'),\n\t\t//('¥', '%C2%A5'),\n\t\t//('¦', '%C2%A6'),\n\t\t//('§', '%C2%A7'),\n\t\t//('¨', '%C2%A8'),\n\t\t//('©', '%C2%A9'),\n\t\t//('ª', '%C2%AA'),\n\t\t//('«', '%C2%AB'),\n\t\t//('¬', '%C2%AC'),\n\t\t//(', '%'C2%AD'),\n\t\t//('®', '%C2%AE'),\n\t\t//('¯', '%C2%AF'),\n\t\t//('°', '%C2%B0'),\n\t\t//('±', '%C2%B1'),\n\t\t//('²', '%C2%B2'),\n\t\t//('³', '%C2%B3'),\n\t\t//('´', '%C2%B4'),\n\t\t//('µ', '%C2%B5'),\n\t\t//('¶', '%C2%B6'),\n\t\t//('·', '%C2%B7'),\n\t\t//('¸', '%C2%B8'),\n\t\t//('¹', '%C2%B9'),\n\t\t//('º', '%C2%BA'),\n\t\t//('»', '%C2%BB'),\n\t\t//('¼', '%C2%BC'),\n\t\t//('½', '%C2%BD'),\n\t\t//('¾', '%C2%BE'),\n\t\t//('¿', '%C2%BF'),\n\t\t//('À', '%C3%80'),\n\t\t//('Á', '%C3%81'),\n\t\t//('Â', '%C3%82'),\n\t\t//('Ã', '%C3%83'),\n\t\t//('Ä', '%C3%84'),\n\t\t//('Å', '%C3%85'),\n\t\t//('Æ', '%C3%86'),\n\t\t//('Ç', '%C3%87'),\n\t\t//('È', '%C3%88'),\n\t\t//('É', '%C3%89'),\n\t\t//('Ê', '%C3%8A'),\n\t\t//('Ë', '%C3%8B'),\n\t\t//('Ì', '%C3%8C'),\n\t\t//('Í', '%C3%8D'),\n\t\t//('Î', '%C3%8E'),\n\t\t//('Ï', '%C3%8F'),\n\t\t//('Ð', '%C3%90'),\n\t\t//('Ñ', '%C3%91'),\n\t\t//('Ò', '%C3%92'),\n\t\t//('Ó', '%C3%93'),\n\t\t//('Ô', '%C3%94'),\n\t\t//('Õ', '%C3%95'),\n\t\t//('Ö', '%C3%96'),\n\t\t//('×', '%C3%97'),\n\t\t//('Ø', '%C3%98'),\n\t\t//('Ù', '%C3%99'),\n\t\t//('Ú', '%C3%9A'),\n\t\t//('Û', '%C3%9B'),\n\t\t//('Ü', '%C3%9C'),\n\t\t//('Ý', '%C3%9D'),\n\t\t//('Þ', '%C3%9E'),\n\t\t//('ß', '%C3%9F'),\n\t\t//('à', '%C3%A0'),\n\t\t//('á', '%C3%A1'),\n\t\t//('â', '%C3%A2'),\n\t\t//('ã', '%C3%A3'),\n\t\t//('ä', '%C3%A4'),\n\t\t//('å', '%C3%A5'),\n\t\t//('æ', '%C3%A6'),\n\t\t//('ç', '%C3%A7'),\n\t\t//('è', '%C3%A8'),\n\t\t//('é', '%C3%A9'),\n\t\t//('ê', '%C3%AA'),\n\t\t//('ë', '%C3%AB'),\n\t\t//('ì', '%C3%AC'),\n\t\t//('í', '%C3%AD'),\n\t\t//('î', '%C3%AE'),\n\t\t//('ï', '%C3%AF'),\n\t\t//('ð', '%C3%B0'),\n\t\t//('ñ', '%C3%B1'),\n\t\t//('ò', '%C3%B2'),\n\t\t//('ó', '%C3%B3'),\n\t\t//('ô', '%C3%B4'),\n\t\t//('õ', '%C3%B5'),\n\t\t//('ö', '%C3%B6'),\n\t\t//('÷', '%C3%B7'),\n\t\t//('ø', '%C3%B8'),\n\t\t//('ù', '%C3%B9'),\n\t\t//('ú', '%C3%BA'),\n\t\t//('û', '%C3%BB'),\n\t\t//('ü', '%C3%BC'),\n\t\t//('ý', '%C3%BD'),\n\t\t//('þ', '%C3%BE'),\n\t\t//('ÿ', '%C3%BF')\n\t);\n\t@each $char, $encoded in $encoding-reference {\n\t\t$str: str-replace($str, $char, $encoded);\n\t}\n\t@return $str;\n}\n\n@mixin no-custom-bullets {\n\tmargin-left: initial;\n\ttext-indent: initial;\n\n\tli {\n\t\t&:before {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n// For the object-fit-images polyfill (https://www.npmjs.com/package/object-fit-images)\n// To use, add @include object-fit(); to the classes/selectors that need a polyfill\n// To adjust the position, add the fit & position parameters, i.e. @include object-fit(contain, center);\n// TODO: Remove the object-fit mixin if not needed\n@mixin object-fit($fit: cover, $position: null) {\n\tobject-fit: $fit;\n\n\t@if( $position ) {\n\t\tfont-family: 'object-fit: #{$fit}; object-position: #{$position}';\n\t\tobject-position: $position;\n\t} @else {\n\t\tfont-family: 'object-fit: #{$fit}';\n\t}\n}\n","// Global Variables\n\n/////\n///// Colors\n/////\n$color-black: #000;\n$color-black-transparent: rgba($color-black, .35);\n$color-white: #fff;\n$color-gray-light: #e5e5e5;\n$color-gray: #9b9b9b;\n$color-gray-dark: #4a4a4a;\n$color-blue: #3498db;\n\n// Defining some of the common uses for the colors\n$color-text: $color-black;\n$color-link: $color-blue;\n$color-link-hover: $color-blue;\n$color-border: $color-gray;\n\n\n/////\n///// Filepaths\n/////\n\n$filepath-images: '../visuals/css-assets/';\n// $filepath-font-gotham: '../fonts/';\n\n/////\n///// Font Information\n/////\n\n$font-name-raleway: 'Raleway';\n$raleway-normal: 400;\n$raleway-bold: 500;\n$raleway-black: 700;\n\n$font-name-poppins: 'Poppins';\n$poppins-normal: 400;\n$poppins-bold: 500;\n\n$font-name-primary: $font-name-raleway;\n$font-family-primary: $font-name-primary, serif;\n$font-weights-primary: (\n\tnormal: $raleway-normal,\n\tbold: $raleway-bold,\n\tblack: $raleway-black // sass-lint:disable-line no-color-keywords\n);\n\n$font-name-secondary: $font-name-poppins;\n$font-family-secondary: $font-name-secondary, sans-serif;\n$font-weights-secondary: (\n\tnormal: $poppins-normal,\n\tbold: $poppins-bold\n);\n\n// https://type-scale.com/\n$type-scale: (1 + (1 / 3)); // perfect fourth\n$font-size-base: rem-calc(18);\n$font-sizes: (\n\ttiny: pow($type-scale, -2) * $font-size-base,\n\tsmall: pow($type-scale, -1) * $font-size-base,\n\tnormal: $font-size-base,\n\tlarge: pow($type-scale, 1) * $font-size-base,\n\tlarger: pow($type-scale, 2) * $font-size-base,\n\txlarge: pow($type-scale, 3) * $font-size-base,\n\txxlarge: pow($type-scale, 4) * $font-size-base\n);\n\n// Different sizes depending on the breakpoint\n$font-size-base-small: map-get($font-sizes, small);\n$font-size-base-large: map-get($font-sizes, normal);\n$font-sizes-heading: (\n\tsmall: (\n\t\th1: map-get($font-sizes, xlarge),\n\t\th2: map-get($font-sizes, large),\n\t\th3: map-get($font-sizes, medium),\n\t\th4: $font-size-base-small,\n\t\th5: $font-size-base-small,\n\t\th6: $font-size-base-small\n\t),\n\tlarge: (\n\t\th1: map-get($font-sizes, xxlarge),\n\t\th2: map-get($font-sizes, xlarge),\n\t\th3: map-get($font-sizes, larger),\n\t\th4: $font-size-base-large,\n\t\th5: $font-size-base-large,\n\t\th6: $font-size-base-large\n\t)\n);\n$line-height: 1.6;\n$line-height-smaller: 1.1;\n\n\n\n\n/////\n///// Transition Speeds\n/////\n$transition-slow: .6s;\n$transition-med: .3s;\n$transition-fast: .1s;\n\n\n\n/////\n///// Global Z-indexes\n/////\n$z-util: 9999; // start at the highest\n\n\n\n/////\n///// Misc variables that need to be shared between files\n/////\n",".sg-fonts--primary {\n\t&,\n\t* {\n\t\tfont-family: $font-family-primary !important; // sass-lint:disable-line no-important\n\t}\n\n\t// .sg-fonts--light {\n\t// \tfont-weight: fwp(light);\n\t// }\n\n\t// .sg-fonts--medium {\n\t// \tfont-weight: fwp(normal);\n\t// }\n\n\t.sg-fonts--black {\n\t\tfont-weight: fwp(black); // sass-lint:disable-line no-color-keywords no-color-literals\n\t}\n}\n\n.sg-fonts--secondary {\n\t&,\n\t* {\n\t\tfont-family: $font-family-secondary !important; // sass-lint:disable-line no-important\n\t}\n\n\t// .sg-fonts--light {\n\t// \tfont-weight: fws(light);\n\t// }\n\n\t// .sg-fonts--medium {\n\t// \tfont-weight: fws(normal);\n\t// }\n\n\t// .sg-fonts--black {\n\t// \tfont-weight: fws(black); // sass-lint:disable-line no-color-keywords no-color-literals\n\t// }\n}\n","#sg-patterns {\n  box-sizing: border-box !important;\n  max-width: 100%;\n  padding: 0 .5em; }\n\n.sg-label {\n  font-size: 90%;\n  line-height: 1; }\n\n.sg-panel {\n  width: 60%;\n  margin: 30px auto;\n  padding: 30px;\n  text-align: center; }\n\n.sg-colors {\n  margin-left: initial;\n  text-indent: initial;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 !important;\n  padding: 0 !important;\n  list-style: none !important; }\n  .sg-colors li:before {\n    display: none; }\n  .sg-colors li {\n    flex: 0 1 auto;\n    min-width: 15%;\n    max-width: 40%;\n    margin: 0 15px 15px 0;\n    padding: 10px 20px;\n    border: 5px solid #fff;\n    box-shadow: 0 0 2px #9b9b9b; }\n    .sg-colors li:after {\n      display: block;\n      margin-top: 0.3125rem;\n      font-size: 70%; }\n\n.sg-colors--black {\n  background: #000;\n  color: #fff; }\n  .sg-colors--black:after {\n    content: \"#000\"; }\n\n.sg-colors--white {\n  background: #fff; }\n  .sg-colors--white:after {\n    content: \"#fff\"; }\n\n.sg-colors--gray-light {\n  background: #e5e5e5;\n  color: #4a4a4a; }\n  .sg-colors--gray-light:after {\n    content: \"#e5e5e5\"; }\n\n.sg-colors--gray {\n  background: #9b9b9b;\n  color: #fff; }\n  .sg-colors--gray:after {\n    content: \"#9b9b9b\"; }\n\n.sg-colors--gray-dark {\n  background: #4a4a4a;\n  color: #fff; }\n  .sg-colors--gray-dark:after {\n    content: \"#4a4a4a\"; }\n\n.sg-colors--blue {\n  background: #3498db;\n  color: #fff; }\n  .sg-colors--blue:after {\n    content: \"#3498db\"; }\n\n.sg-fonts--primary,\n.sg-fonts--primary * {\n  font-family: \"Raleway\", serif !important; }\n\n.sg-fonts--primary .sg-fonts--black {\n  font-weight: 700; }\n\n.sg-fonts--secondary,\n.sg-fonts--secondary * {\n  font-family: \"Poppins\", sans-serif !important; }\n\n[class^='sg-icons--'],\n[class*=' sg-icons--'] {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 20px;\n  line-height: 20px; }\n\n.sg-icons--facebook {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M421.8,273.8v-82c0-22.4,20.7-40.6,46.2-40.6h46.9V50h-92.3c-76.5,0-138.5,54.4-138.5,121.5v102.3H191V375h91.8v325h139.1V375h92.1L560,273.8H421.8z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--instagram {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M618.7,608.1c-4.9,4.7-11.4,7.3-18.2,7.1H148.1c-6.9,0.2-13.5-2.3-18.5-7.1 c-4.9-4.6-7.5-11-7.4-17.7V327h59.8c-5.7,17.2-8.7,35.1-8.7,53.3c-0.5,50.9,21.2,99.5,59.2,133.2c38.6,36.3,89.8,56,142.8,55.1 c35.5,0.3,70.4-8.4,101.7-25.2c30.1-16,55.4-39.6,73.4-68.5c18-28.2,27.4-61.1,27.1-94.5c0.1-18-2.8-36.1-8.4-53.3h57.1v263.4 C626.5,597.2,623.8,603.7,618.7,608.1z M375.4,495.3c-34.2,0.7-67.3-12.1-92.2-35.6c-47.5-43.1-51-116.6-7.9-164.1 c2.5-2.8,5.1-5.4,7.9-7.9c52.4-47.4,132.2-47.4,184.6,0c47.5,42.7,51.3,115.8,8.7,163.3c-2.8,3-5.6,6-8.7,8.7 C442.9,483.2,409.7,496,375.4,495.3L375.4,495.3z M617.9,247.3c-5.6,5.4-12.9,8.3-20.6,8.2h-73.6c-7.7,0.2-15.2-2.8-20.6-8.2 c-5.6-5.1-8.8-12.3-8.7-19.9v-67c0-7.5,3.1-14.7,8.7-19.8c5.5-5.6,12.9-8.5,20.6-8.3h73.6c7.7-0.2,15.2,2.9,20.6,8.3 c5.5,5.1,8.5,12.2,8.4,19.8v67C626.5,235,623.4,242.2,617.9,247.3L617.9,247.3z M675.5,86.3c-15.7-15.4-36.9-23.9-59-23.6H133.4 c-22-0.4-43.3,8.1-59,23.6c-15.8,14.6-24.7,35-24.5,56.6v464.3c-0.3,21.4,8.7,42,24.5,56.6c15.7,15.5,36.9,24,59,23.6h483.1 c22,0.3,43.3-8.2,59-23.6c15.8-14.5,24.7-35,24.5-56.6V142.9C700.3,121.3,691.3,100.9,675.5,86.3L675.5,86.3z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--twitter {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M700.5,173.4c-23.9,10.6-49.6,17.8-76.6,21c27.5-16.5,48.6-42.7,58.6-73.7c-25.8,15.3-54.4,26.4-84.7,32.4c-24.3-26-58.9-42.1-97.3-42.1c-73.6,0-133.4,59.7-133.4,133.3c0,10.4,1.2,20.6,3.5,30.4C259.8,269.1,161.5,216,95.7,135.3c-11.5,19.7-18,42.6-18,67c0,46.3,23.6,87.1,59.3,111c-21.9-0.7-42.4-6.7-60.4-16.7v1.7c0,64.6,46,118.5,107,130.8c-11.2,3-23,4.7-35.1,4.7c-8.6,0-16.9-0.9-25.1-2.5c17,53,66.2,91.6,124.6,92.6c-45.6,35.7-103.1,57-165.6,57c-10.8,0-21.4-0.7-31.8-1.8c59,37.9,129.1,60,204.4,60c245.3,0,379.4-203.2,379.4-379.4l-0.4-17.3C660,223.7,682.7,200.2,700.5,173.4z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--youtube {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M684.5 220.9c-7.6-27.8-29.3-49.4-57.2-56.8C577 150.8 375 150.8 375 150.8s-202 0-252.3 13.4c-27.8 7.4-49.6 29-57.2 56.8C52 271 52 375.5 52 375.5s0 104.4 13.5 154.4c7.4 27.7 29.3 48.4 57.2 55.8C173 599.2 375 599.2 375 599.2s202 0 252.3-13.4c27.7-7.4 49.7-28.3 57.2-55.8C698 479.8 698 375.5 698 375.5s0-104.5-13.5-154.6zM308.9 470.2V280.6l168.8 94.7-168.8 94.9z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--pinterest {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M656.7,214.3c-28.8-49.6-67.9-88.8-117.4-117.7c-49.4-28.9-103.4-43.4-162-43.4s-112.5,14.5-162,43.4 s-88.6,68.2-117.4,117.7C69,263.8,54.6,317.8,54.6,376.5c0,65.4,17.8,124.8,53.4,178.1c35.6,53.4,82.2,92.8,140,118.3 c-1.2-30.1,0.6-54.8,5.4-74.5l41.6-176c-7-13.7-10.5-30.8-10.5-51.3c0-23.8,6-43.8,18-59.7c12.1-15.9,26.7-24,44.1-24 c14,0,24.8,4.7,32.4,13.9c7.5,9.2,11.4,20.9,11.4,35c0,8.7-1.6,19.3-4.8,31.8c-3.2,12.4-7.4,27-12.6,43.4 c-5.2,16.5-8.9,29.5-11.1,39.4c-3.9,17.1-0.6,31.8,9.7,44.1c10.4,12.2,24.1,18.3,41.2,18.3c29.9,0,54.6-16.7,73.7-50.2 c19.2-33.4,28.8-74,28.8-121.7c0-36.8-11.8-66.6-35.5-89.7s-56.6-34.5-99-34.5c-47.3,0-85.7,15.3-115,45.6 c-29.3,30.5-43.9,66.9-43.9,109.2c0,25.3,7.1,46.4,21.4,63.6c4.8,5.6,6.4,11.7,4.7,18.1c-0.5,1.7-1.7,5.8-3.4,12.6 c-1.7,6.7-2.9,11.1-3.4,13.1c-2.2,8.9-7.5,11.8-15.9,8.4c-21.5-8.9-38-24.5-49.1-46.8c-11.1-22.2-16.8-47.8-16.8-77.1 c0-18.8,3-37.6,9.1-56.4c6-18.8,15.4-36.9,28.1-54.6c12.7-17.5,28-33,45.7-46.5s39.4-24.2,64.9-32.4c25.5-8.2,53-12.2,82.3-12.2 c39.8,0,75.6,8.8,107.2,26.6c31.6,17.6,55.9,40.6,72.4,68.7c16.7,28.1,25,58.1,25,90.1c0,42.1-7.3,80-21.9,113.7 c-14.5,33.7-35.1,60.1-61.8,79.3c-26.6,19.2-56.9,28.9-90.7,28.9c-17.1,0-33-4-48-12.1c-14.9-8-25-17.5-30.7-28.4 c-12.6,49.6-20.2,79.3-22.7,88.8c-5.3,20-16.2,42.9-32.8,69.1c29.9,8.9,60.5,13.5,91.6,13.5c58.6,0,112.5-14.5,162-43.4 s88.6-68.2,117.4-117.7c29-49.6,43.4-103.7,43.4-162.4S685.6,263.8,656.7,214.3z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--plus {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M692.3 320.9H427.9V50.3H322.1v270.6H57.7v108.2h264.4v270.6h105.8V429.1h264.4V320.9z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--minus {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M57.5 320.4h635v109.2h-635V320.4z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--search {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M689.155 627.778c14.46 15.166 14.46 39 0 53.444l-7.954 7.945c-14.46 14.444-39.043 14.444-53.504 0L464.294 525.944c-42.659 30.334-95.44 48.39-151.836 48.39C167.13 574.333 50 457.333 50 312.166 50 167 167.13 50 312.458 50c145.328 0 262.459 117 262.459 262.167 0 57.055-18.076 109.777-49.166 153.11l163.404 162.5zM117.36 310.188c0 106.533 86.134 192.667 192.668 192.667 106.535 0 192.668-86.134 192.668-192.668S416.563 117.52 310.028 117.52c-106.534 0-192.668 86.134-192.668 192.668z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--close {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M686.729 641.104l-59.935 59.518-263.846-258.333-255.017 258.333L50 641.104l262.383-265.793L50 109.517 107.931 50l255.017 258.333L626.794 50l59.935 59.517-271.456 265.794z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--location-pin {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M284.7,320.8c0-49.8,40.5-90.3,90.3-90.3s90.3,40.5,90.3,90.3s-40.5,90.3-90.3,90.3 C325.2,411,284.8,370.7,284.7,320.8z M502.5,560.8c10.8,10,11.5,26.8,1.6,37.6c-26,27.8-52.6,54.9-79.8,81.5 C410.7,693.2,392.8,700,375,700c-17.8,0-35.6-6.7-49.2-20c-70.8-70-158.9-157.1-199.6-251.1c-43.8-101.1-20.8-221.4,57.1-299.3 C234,78.5,303,49.9,375,50c72.4,0,140.5,28.2,191.7,79.4c77.9,77.9,100.9,198.2,57.1,299.4c-10.7,24.4-23.7,47.7-38.8,69.7 c-7.7,12.5-24.1,16.5-36.7,8.8c-12.5-7.7-16.5-24.1-8.8-36.7c0.4-0.6,0.8-1.3,1.3-1.9c14.6-21.7,25.8-41.7,34.1-61.1 c35.1-82.1,16.9-177.2-45.9-240.6c-40.8-41-96.2-64-154-63.8c-57.8-0.2-113.3,22.8-154,63.8c-62.8,63.4-80.9,158.5-45.9,240.5 c36.6,84.6,120.6,167.6,188.1,234.3c6.6,6.4,17.1,6.4,23.6,0c24.4-24.2,52.1-51.6,78.1-79.7C474.9,551.5,491.7,550.8,502.5,560.8z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--checkbox {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M282,612c-75.9-75.5-154.5-153.8-232-231c18.5-18.5,37.3-37.3,55.4-55.7c57.8,57.8,116.5,116.9,175.3,175.7C403.4,378.2,524,258,643.6,138c21.2,21.2,39.6,39.6,56,56.4C560.9,332.8,421.1,472.9,282,612z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--radio-button {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M375,50C195.5,50,50,195.5,50,375s145.5,325,325,325s325-145.5,325-325S554.5,50,375,50C375,50,375,50,375,50z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--play-button {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M157.63 368.05v288.1l4.3-2.5c19.5-11.4 414.4-239.2 449.4-259.3 33.9-19.4 44.8-26.2 44-27-.7-.7-74.3-43.4-163.7-94.9-89.4-51.6-200.1-115.5-246-142s-84.5-48.7-85.7-49.4l-2.3-1.2v288.2z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n\n.sg-icons--bar {\n  width: 30px;\n  height: 30px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M63.2 513.6h623.5v69.3H63.2zM63.2 340.4h623.5v69.3H63.2zM63.2 167.2h623.5v69.3H63.2z'/%3E%3C/svg%3E\");\n  background-size: 30px;\n  line-height: 30px;\n  margin-right: 10px;\n  vertical-align: middle; }\n","$default-icon-size: 20px;\n$default-icon-padding: 5px;\n$icon-svg-size: 750;\n$icon-svg-padding: 50;\n\n// Returns all of the icons with the color/stroke/stroke-width populated\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {map} - A map of all of the icons\n@function get-all-icons($color: null, $stroke-color: null, $stroke-width: 0) {\n\t// If null was sent in, it overrides the default parameters, so these are the defaults\n\t@if($color == null) { $color: $color-black; }\n\t@if($stroke-color == null) { $stroke-color: transparent; }\n\n\t// When creating a new icon path, make sure the SVG file is square, and $icon-svg-size in size\n\t// There should be $icon-svg-padding on all sides, and the icon should fill the entire space left inside the padding\n\t// If it is not a square icon, the largest dimension should fill the space and the other dimension should be centered\n\t$icons: (\n\t\tfacebook:\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M421.8,273.8v-82c0-22.4,20.7-40.6,46.2-40.6h46.9V50h-92.3c-76.5,0-138.5,54.4-138.5,121.5v102.3H191V375h91.8v325h139.1V375h92.1L560,273.8H421.8z\"/>'),\n\t\tinstagram:\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M618.7,608.1c-4.9,4.7-11.4,7.3-18.2,7.1H148.1c-6.9,0.2-13.5-2.3-18.5-7.1 c-4.9-4.6-7.5-11-7.4-17.7V327h59.8c-5.7,17.2-8.7,35.1-8.7,53.3c-0.5,50.9,21.2,99.5,59.2,133.2c38.6,36.3,89.8,56,142.8,55.1 c35.5,0.3,70.4-8.4,101.7-25.2c30.1-16,55.4-39.6,73.4-68.5c18-28.2,27.4-61.1,27.1-94.5c0.1-18-2.8-36.1-8.4-53.3h57.1v263.4 C626.5,597.2,623.8,603.7,618.7,608.1z M375.4,495.3c-34.2,0.7-67.3-12.1-92.2-35.6c-47.5-43.1-51-116.6-7.9-164.1 c2.5-2.8,5.1-5.4,7.9-7.9c52.4-47.4,132.2-47.4,184.6,0c47.5,42.7,51.3,115.8,8.7,163.3c-2.8,3-5.6,6-8.7,8.7 C442.9,483.2,409.7,496,375.4,495.3L375.4,495.3z M617.9,247.3c-5.6,5.4-12.9,8.3-20.6,8.2h-73.6c-7.7,0.2-15.2-2.8-20.6-8.2 c-5.6-5.1-8.8-12.3-8.7-19.9v-67c0-7.5,3.1-14.7,8.7-19.8c5.5-5.6,12.9-8.5,20.6-8.3h73.6c7.7-0.2,15.2,2.9,20.6,8.3 c5.5,5.1,8.5,12.2,8.4,19.8v67C626.5,235,623.4,242.2,617.9,247.3L617.9,247.3z M675.5,86.3c-15.7-15.4-36.9-23.9-59-23.6H133.4 c-22-0.4-43.3,8.1-59,23.6c-15.8,14.6-24.7,35-24.5,56.6v464.3c-0.3,21.4,8.7,42,24.5,56.6c15.7,15.5,36.9,24,59,23.6h483.1 c22,0.3,43.3-8.2,59-23.6c15.8-14.5,24.7-35,24.5-56.6V142.9C700.3,121.3,691.3,100.9,675.5,86.3L675.5,86.3z\"/>'),\n\t\ttwitter:\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M700.5,173.4c-23.9,10.6-49.6,17.8-76.6,21c27.5-16.5,48.6-42.7,58.6-73.7c-25.8,15.3-54.4,26.4-84.7,32.4c-24.3-26-58.9-42.1-97.3-42.1c-73.6,0-133.4,59.7-133.4,133.3c0,10.4,1.2,20.6,3.5,30.4C259.8,269.1,161.5,216,95.7,135.3c-11.5,19.7-18,42.6-18,67c0,46.3,23.6,87.1,59.3,111c-21.9-0.7-42.4-6.7-60.4-16.7v1.7c0,64.6,46,118.5,107,130.8c-11.2,3-23,4.7-35.1,4.7c-8.6,0-16.9-0.9-25.1-2.5c17,53,66.2,91.6,124.6,92.6c-45.6,35.7-103.1,57-165.6,57c-10.8,0-21.4-0.7-31.8-1.8c59,37.9,129.1,60,204.4,60c245.3,0,379.4-203.2,379.4-379.4l-0.4-17.3C660,223.7,682.7,200.2,700.5,173.4z\"/>'),\n\t\tyoutube:\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M684.5 220.9c-7.6-27.8-29.3-49.4-57.2-56.8C577 150.8 375 150.8 375 150.8s-202 0-252.3 13.4c-27.8 7.4-49.6 29-57.2 56.8C52 271 52 375.5 52 375.5s0 104.4 13.5 154.4c7.4 27.7 29.3 48.4 57.2 55.8C173 599.2 375 599.2 375 599.2s202 0 252.3-13.4c27.7-7.4 49.7-28.3 57.2-55.8C698 479.8 698 375.5 698 375.5s0-104.5-13.5-154.6zM308.9 470.2V280.6l168.8 94.7-168.8 94.9z\"/>'),\n\t\tpinterest:\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M656.7,214.3c-28.8-49.6-67.9-88.8-117.4-117.7c-49.4-28.9-103.4-43.4-162-43.4s-112.5,14.5-162,43.4 s-88.6,68.2-117.4,117.7C69,263.8,54.6,317.8,54.6,376.5c0,65.4,17.8,124.8,53.4,178.1c35.6,53.4,82.2,92.8,140,118.3 c-1.2-30.1,0.6-54.8,5.4-74.5l41.6-176c-7-13.7-10.5-30.8-10.5-51.3c0-23.8,6-43.8,18-59.7c12.1-15.9,26.7-24,44.1-24 c14,0,24.8,4.7,32.4,13.9c7.5,9.2,11.4,20.9,11.4,35c0,8.7-1.6,19.3-4.8,31.8c-3.2,12.4-7.4,27-12.6,43.4 c-5.2,16.5-8.9,29.5-11.1,39.4c-3.9,17.1-0.6,31.8,9.7,44.1c10.4,12.2,24.1,18.3,41.2,18.3c29.9,0,54.6-16.7,73.7-50.2 c19.2-33.4,28.8-74,28.8-121.7c0-36.8-11.8-66.6-35.5-89.7s-56.6-34.5-99-34.5c-47.3,0-85.7,15.3-115,45.6 c-29.3,30.5-43.9,66.9-43.9,109.2c0,25.3,7.1,46.4,21.4,63.6c4.8,5.6,6.4,11.7,4.7,18.1c-0.5,1.7-1.7,5.8-3.4,12.6 c-1.7,6.7-2.9,11.1-3.4,13.1c-2.2,8.9-7.5,11.8-15.9,8.4c-21.5-8.9-38-24.5-49.1-46.8c-11.1-22.2-16.8-47.8-16.8-77.1 c0-18.8,3-37.6,9.1-56.4c6-18.8,15.4-36.9,28.1-54.6c12.7-17.5,28-33,45.7-46.5s39.4-24.2,64.9-32.4c25.5-8.2,53-12.2,82.3-12.2 c39.8,0,75.6,8.8,107.2,26.6c31.6,17.6,55.9,40.6,72.4,68.7c16.7,28.1,25,58.1,25,90.1c0,42.1-7.3,80-21.9,113.7 c-14.5,33.7-35.1,60.1-61.8,79.3c-26.6,19.2-56.9,28.9-90.7,28.9c-17.1,0-33-4-48-12.1c-14.9-8-25-17.5-30.7-28.4 c-12.6,49.6-20.2,79.3-22.7,88.8c-5.3,20-16.2,42.9-32.8,69.1c29.9,8.9,60.5,13.5,91.6,13.5c58.6,0,112.5-14.5,162-43.4 s88.6-68.2,117.4-117.7c29-49.6,43.4-103.7,43.4-162.4S685.6,263.8,656.7,214.3z\"/>'),\n\t\tplus:\t\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M692.3 320.9H427.9V50.3H322.1v270.6H57.7v108.2h264.4v270.6h105.8V429.1h264.4V320.9z\"/>'),\n\t\tminus:\t\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M57.5 320.4h635v109.2h-635V320.4z\"/>'),\n\t\tsearch:\t\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M689.155 627.778c14.46 15.166 14.46 39 0 53.444l-7.954 7.945c-14.46 14.444-39.043 14.444-53.504 0L464.294 525.944c-42.659 30.334-95.44 48.39-151.836 48.39C167.13 574.333 50 457.333 50 312.166 50 167 167.13 50 312.458 50c145.328 0 262.459 117 262.459 262.167 0 57.055-18.076 109.777-49.166 153.11l163.404 162.5zM117.36 310.188c0 106.533 86.134 192.667 192.668 192.667 106.535 0 192.668-86.134 192.668-192.668S416.563 117.52 310.028 117.52c-106.534 0-192.668 86.134-192.668 192.668z\"/>'),\n\t\tclose:\t\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M686.729 641.104l-59.935 59.518-263.846-258.333-255.017 258.333L50 641.104l262.383-265.793L50 109.517 107.931 50l255.017 258.333L626.794 50l59.935 59.517-271.456 265.794z\"/>'),\n\t\tlocation-pin:\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M284.7,320.8c0-49.8,40.5-90.3,90.3-90.3s90.3,40.5,90.3,90.3s-40.5,90.3-90.3,90.3 C325.2,411,284.8,370.7,284.7,320.8z M502.5,560.8c10.8,10,11.5,26.8,1.6,37.6c-26,27.8-52.6,54.9-79.8,81.5 C410.7,693.2,392.8,700,375,700c-17.8,0-35.6-6.7-49.2-20c-70.8-70-158.9-157.1-199.6-251.1c-43.8-101.1-20.8-221.4,57.1-299.3 C234,78.5,303,49.9,375,50c72.4,0,140.5,28.2,191.7,79.4c77.9,77.9,100.9,198.2,57.1,299.4c-10.7,24.4-23.7,47.7-38.8,69.7 c-7.7,12.5-24.1,16.5-36.7,8.8c-12.5-7.7-16.5-24.1-8.8-36.7c0.4-0.6,0.8-1.3,1.3-1.9c14.6-21.7,25.8-41.7,34.1-61.1 c35.1-82.1,16.9-177.2-45.9-240.6c-40.8-41-96.2-64-154-63.8c-57.8-0.2-113.3,22.8-154,63.8c-62.8,63.4-80.9,158.5-45.9,240.5 c36.6,84.6,120.6,167.6,188.1,234.3c6.6,6.4,17.1,6.4,23.6,0c24.4-24.2,52.1-51.6,78.1-79.7C474.9,551.5,491.7,550.8,502.5,560.8z\"/>'),\n\t\tcheckbox:\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M282,612c-75.9-75.5-154.5-153.8-232-231c18.5-18.5,37.3-37.3,55.4-55.7c57.8,57.8,116.5,116.9,175.3,175.7C403.4,378.2,524,258,643.6,138c21.2,21.2,39.6,39.6,56,56.4C560.9,332.8,421.1,472.9,282,612z\"/>'),\n\t\tradio-button:\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M375,50C195.5,50,50,195.5,50,375s145.5,325,325,325s325-145.5,325-325S554.5,50,375,50C375,50,375,50,375,50z\"/>'),\n\t\tplay-button:\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M157.63 368.05v288.1l4.3-2.5c19.5-11.4 414.4-239.2 449.4-259.3 33.9-19.4 44.8-26.2 44-27-.7-.7-74.3-43.4-163.7-94.9-89.4-51.6-200.1-115.5-246-142s-84.5-48.7-85.7-49.4l-2.3-1.2v288.2z\"/>'),\n\t\tbar:\t\t\t(size: 30px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M63.2 513.6h623.5v69.3H63.2zM63.2 340.4h623.5v69.3H63.2zM63.2 167.2h623.5v69.3H63.2z\"/>')\n\t);\n\n\t@return $icons;\n}\n\n// Gets the size of a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @return {Number} - the size of the icon\n@function get-svg-icon-size($icon-name) {\n\t$all-icons: get-all-icons();\n\t@return map-get(map-get($all-icons, $icon-name), size);\n}\n\n// Gets the path for a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {String} - the path for the icon\n@function get-svg-icon-path($icon-name, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t@if(unit($stroke-width) == 'px') {\n\t\t$size: get-svg-icon-size($icon-name);\n\t\t$stroke-width: convert-to-svg-value($stroke-width, $size);\n\t}\n\n\t$all-icons: get-all-icons($color, $stroke-color, $stroke-width);\n\n\t@return map-get(map-get($all-icons, $icon-name), path);\n}\n\n// Converts an \"external to svg\" value to an \"internal to svg\" value, accounting for the svg size\n// @param {Number} $val - The value to be converted\n// @param {Number} $external-svg-size - The size that the svg is actually rendered at\n// @param {Number} $svg-size - Optional. The size of the SVG svg\n// @return {Number} - The \"internal to svg\" value\n@function convert-to-svg-value($val, $external-svg-size, $svg-size: $icon-svg-size) {\n\t@if(unit($val) != unit($external-svg-size)) {\n\t\t@warn 'Error! Units do not match: ' + $external-unit + ', ' + $external-svg-size;\n\t\t@return $val;\n\t}\n\n\t@return ($val / $external-svg-size) * $svg-size;\n}\n\n// Returns a svg url for a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon. Default uses the size in the icon map for the $icon-name\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {String} - a url to the icon\n@function svg-icon($icon-name, $size-override: null, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t// Convert the stroke to svg units\n\t@if(unit($stroke-width) == 'px') {\n\t\t$size: $size-override;\n\t\t@if($size-override == null) {\n\t\t\t$size: get-svg-icon-size($icon-name);\n\t\t}\n\t\t$stroke-width: convert-to-svg-value($stroke-width, $size);\n\t}\n\n\t// The stroke is centered along the path\n\t$stroke-overhang: ($stroke-width / 2);\n\n\t$svg-size: $icon-svg-size - ($icon-svg-padding * 2) + ($stroke-overhang * 2);\n\t$offset: $icon-svg-padding - $stroke-overhang;\n\n\t$path: get-svg-icon-path($icon-name, $color, $stroke-color, $stroke-width);\n\t$svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"#{$svg-size}\" height=\"#{$svg-size}\" viewBox=\"#{$offset} #{$offset} #{$svg-size} #{$svg-size}\">#{$path}</svg>';\n\t@return 'data:image/svg+xml,#{url-encode($svg)}';\n}\n\n// All icons use these styles as a baseline\n// @param {String} $icon-name - Optional. The name of the icon that will added via another mixin (allows accurate sizing). Default uses $default-icon-size.\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n@mixin icon-base($icon-name: null, $size-override: null) {\n\t$size: $default-icon-size;\n\n\t@if($size-override) {\n\t\t$size: $size-override;\n\t} @else if($icon-name) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\n\tdisplay: inline-block;\n\twidth: $size;\n\theight: $size;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center center;\n\tbackground-size: $size;\n\tline-height: $size;\n}\n\n// The individual icon styles (assuming icon-base has been applied already)\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n@mixin icon($icon-name, $size-override: null, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t$size: $size-override;\n\t@if($size-override == null) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\twidth: $size;\n\theight: $size;\n\tbackground-image: url('#{svg-icon($icon-name, $size-override, $color, $stroke-color, $stroke-width)}');\n\tbackground-size: $size;\n\tline-height: $size;\n}\n\n// Positioning the icon to the appropriate size (assuming icon-base has been applied already)\n// @param {String} $which-side - Which side of the text the icon should be on.  Acceptable values are \"left\" or \"right\".\n// @param {Number} $size - Optional. The size of the icon. Default uses $default-icon-size.\n// @param {Number} $padding - Optional. The amount of space between the icon and text. Default uses $default-icon-padding\n@mixin icon-position($which-side, $size: $default-icon-size, $padding: $default-icon-padding) {\n\t@if($which-side == 'left') {\n\t\tpadding-left: ($padding + $size);\n\t\tbackground-position: left;\n\t} @else if($which-side == 'right') {\n\t\tpadding-right: ($padding + $size);\n\t\tbackground-position: right;\n\t}\n}\n\n// Resizing an icon (assuming icon-base has been applied already)\n// @param {Number} $size - The size of the icon.\n// @param {String} $which-side - Optional. Which side of the text the icon should be on. Acceptable values are \"left\", \"right\", or null. Defaults to center (null).\n// @param {Number} $padding - Optional. If the icon is to a side, the amount of space between the icon and text. Default uses $default-icon-padding\n@mixin icon-resize($size, $which-side: null, $padding: $default-icon-padding) {\n\theight: $size;\n\tbackground-size: $size;\n\tline-height: $size;\n\n\t@if($which-side == 'left') {\n\t\tpadding-left: ($padding + $size);\n\t} @else if($which-side == 'right') {\n\t\tpadding-right: ($padding + $size);\n\t} @else {\n\t\twidth: $size;\n\t}\n}\n\n// Puts an individual icon into a circle shape (assuming icon-base has been applied already)\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @param {Number} $padding - Optional. The amount of space between the icon and the edge of the circle. Default uses $default-icon-padding.\n@mixin icon-circle($icon-name, $size-override: null, $circle-color: $color-black, $color: $color-white, $stroke-color: null,  $stroke-width: 0, $icon-padding: $default-icon-padding) {\n\t$size: $size-override;\n\t@if($size-override == null) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\n\t@include icon($icon-name, $size, $color, $stroke-color, $stroke-width);\n\t@include icon-circle-size($size, $icon-padding);\n\tbackground-color: $circle-color;\n}\n\n// Resizes a circle icon (assuming icon-circle has been applied already)\n// @param {Number} $size - The size of the icon.\n// @param {Number} $padding - Optional. The amount of space between the icon and the edge of the circle. Default uses $default-icon-padding.\n@mixin icon-circle-size($size, $padding: null) {\n\t@if($padding == null) { $padding: $default-icon-padding; }\n\t$size-with-padding: $size + ($padding * 2);\n\n\twidth: $size-with-padding;\n\theight: $size-with-padding;\n\tborder-radius: $size-with-padding / 2;\n\tline-height: $size-with-padding;\n}\n\n// Changes the icon's background-image only, when using multiple icons of the same size (assuming icon AND icon-base has been applied already)\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n@mixin icon-image($icon-name, $size-override: null, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t$size: $size-override;\n\t@if($size-override == null) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\tbackground-image: url('#{svg-icon($icon-name, $size-override, $color, $stroke-color, $stroke-width)}');\n}\n","$block: 'sg-icons';\n\n[class^='#{$block}--'],\n[class*=' #{$block}--'] {\n\t@include icon-base;\n}\n\n@each $icon in get-all-icons() {\n\t$key: nth($icon, 1);\n\n  \t.#{$block}--#{$key} {\n  \t\t@include icon($key);\n  \t\tmargin-right: 10px;\n  \t\tvertical-align: middle;\n  \t}\n}\n"]}