{"version":3,"sources":["../../source/assets/css/_partials/tags/_tags-small.scss","../../source/assets/css/_partials/_global/_variables.scss","../../source/assets/css/_partials/test/_test-small.scss","../../source/assets/css/_partials/_global/_icons.scss","../../source/assets/css/small.css","../../source/assets/css/_partials/icons/_icons-small.scss"],"names":[],"mappings":"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","file":"small.min.css","sourcesContent":["// This partial is a little special in that it covers a bunch of different tags.  Selectors should be simple (1 or 2 deep) and only cover *tags* not classes or ids\n// TODO: Most of these styles would be covered with a reset or a framework, scrub through them and make sure that you only have what you need (or move them to the framework variables if it makes sense)\n*,\n*:before,\n*:after {\n\tbox-sizing: border-box;\n}\n\nhtml {\n\tfont-size: 100%;\n}\n\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n\tcolor: $color-text;\n\tfont-family: $font-family-primary;\n\tfont-size: $font-size-base-small;\n\tfont-weight: map-get($font-weights-primary, normal);\n\tline-height: $line-height;\n\t-ms-text-size-adjust: 100%; // sass-lint:disable-line no-vendor-prefixes\n\t-webkit-text-size-adjust: 100%; // sass-lint:disable-line no-vendor-prefixes\n}\n\na {\n\ttransition: color $transition-med;\n\tcolor: $color-link;\n\ttext-decoration: none;\n\n\t&:hover,\n\t&:focus {\n\t\tcolor: $color-link-hover;\n\t\ttext-decoration: underline;\n\t}\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\tfont-family: $font-family-secondary;\n\tfont-weight: map-get($font-weights-secondary, bold);\n\tline-height: $line-height-smaller;\n}\n\nh1 {\n\tfont-size: map-get(map-get($font-sizes-heading, small), h1);\n}\n\nh2 {\n\tfont-size: map-get(map-get($font-sizes-heading, small), h2);\n}\n\nh3 {\n\tfont-size: map-get(map-get($font-sizes-heading, small), h3);\n}\n\nh4 {\n\tfont-size: map-get(map-get($font-sizes-heading, small), h4);\n}\n\nh5 {\n\tfont-size: map-get(map-get($font-sizes-heading, small), h5);\n}\n\nh6 {\n\tfont-size: map-get(map-get($font-sizes-heading, small), h6);\n}\n\nblockquote {\n\ttext-align: center;\n}\n\nhr {\n\theight: 1px;\n\tborder: 0;\n}\n\ntable {\n\twidth: 100%;\n}\n\nimg {\n\tmax-width: 100%;\n\theight: auto;\n}\n\nembed,\niframe,\nobject {\n\tmax-width: 100%;\n}\n\nb,\nstrong {\n\tfont-weight: map-get($font-weights-primary, bold);\n}\n","// Global Variables\n\n/////\n///// Colors\n/////\n$color-black: #000;\n$color-black-transparent-light: rgba($color-black, .1);\n$color-black-transparent: rgba($color-black, .3);\n$color-black-transparent-dark: rgba($color-black, .8);\n$color-white: #fff;\n$color-gray: #999;\n$color-gray-light: lighten($color-gray, 5%);\n$color-gray-lighter: lighten($color-gray-light, 5%);\n$color-gray-lightest: lighten($color-gray-lighter, 5%);\n$color-gray-dark: darken($color-gray, 5%);\n$color-gray-darker: darken($color-gray-dark, 5%);\n$color-gray-darkest: darken($color-gray-darker, 15%);\n$color-blue: #3498db;\n$color-blue-darker: #2874a6;\n\n// Defining some of the common uses for the colors\n$color-text: $color-gray-darkest;\n$color-link: $color-blue;\n$color-link-hover: $color-blue-darker;\n$color-border: $color-gray;\n\n\n\n/////\n///// Font Information\n/////\n\n// TODO: Remove this filepath variable, just an example (specify a filepath for your self-hosted font here, to be used in _fonts.scss)\n// $filepath-font-gotham: '../fonts/';\n$font-name-helvetica: 'Helvetica';\n$helvetica-normal: 400;\n$helvetica-bold: 600;\n$helvetica-black: 900; // sass-lint:disable-line no-color-keywords\n\n$font-name-georgia: 'Georgia';\n$georgia-normal: 400;\n$georgia-bold: 900;\n\n$font-name-primary: $font-name-helvetica;\n$font-family-primary: $font-name-primary, sans-serif;\n$font-weights-primary: ( \n    normal: $helvetica-normal,\n    bold: $helvetica-bold,\n    black: $helvetica-black // sass-lint:disable-line no-color-keywords\n);\n\n$font-name-secondary: $font-name-georgia;\n$font-family-secondary: $font-name-secondary, serif;\n$font-weights-secondary: ( \n    normal: $georgia-normal,\n    bold: $georgia-bold\n);\n\n// https://type-scale.com/\n$type-scale: (1 + (1 / 3)); // perfect fourth\n$font-size-base: rem-calc(18);\n$font-sizes: (\n    tiny: pow($type-scale, -2) * $font-size-base,\n    small: pow($type-scale, -1) * $font-size-base,\n    normal: $font-size-base,\n    large: pow($type-scale, 1) * $font-size-base,\n    larger: pow($type-scale, 2) * $font-size-base,\n    xlarge: pow($type-scale, 3) * $font-size-base,\n    xxlarge: pow($type-scale, 4) * $font-size-base\n);\n\n// Different sizes depending on the breakpoint\n$font-size-base-small: map-get($font-sizes, small);\n$font-size-base-large: map-get($font-sizes, normal);\n$font-sizes-heading: (\n    small: (\n        h1: map-get($font-sizes, xlarge),\n        h2: map-get($font-sizes, large),\n        h3: map-get($font-sizes, medium),\n        h4: $font-size-base-small,\n        h5: $font-size-base-small,\n        h6: $font-size-base-small\n    ),\n    large: (\n        h1: map-get($font-sizes, xxlarge),\n        h2: map-get($font-sizes, xlarge),\n        h3: map-get($font-sizes, larger),\n        h4: $font-size-base-large,\n        h5: $font-size-base-large,\n        h6: $font-size-base-large\n    )\n);\n$line-height: 1.6;\n$line-height-smaller: 1.1;\n\n\n\n/////\n///// Breakpoint Info\n/////\n$breakpoints: (\n\tsmall: 0,\n\tmedium: 764px,\n\tlarge: 1024px,\n    xlarge: 1200px\n);\n$breakpoint-ends: (\n\tsmall: map-get($breakpoints, medium) - 1px,\n\tmedium: map-get($breakpoints, large) - 1px\n);\n\n\n\n/////\n///// Transition Speeds\n/////\n$transition-slow: .6s;\n$transition-med: .3s;\n$transition-fast: .1s;\n\n\n\n/////\n///// Global Z-indexes\n/////\n$z-util: 9999; // start at the highest\n// TODO: include all global z-indexes here, so they're all in one spot - remove these examples\n// $z-modal: $z-util; $z-util: $z-util - 1; // assign the variable, and decrement for the next one\n// $z-tooltip: $z-util; $z-util: $z-util - 1; \n// $z-primarynav-mobile: $z-util; $z-util: $z-util - 1; \n// $z-primarynav: $z-util; $z-util: $z-util - 1; \n\n\n\n/////\n///// Misc variables that need to be shared between files\n/////\n\n\n","// TODO: Remove this file, it's just an example\n$block: 'test';\n\n.#{$block} {\n\t&__icon {\n\t\t@include icon-base(facebook, 25px);\n\t\t@include icon(facebook, 25px, $color-gray, $color-black, 1px);\n\t}\n}\n","$default-icon-size: 20px;\n$default-icon-padding: 5px;\n$icon-svg-size: 750;\n$icon-svg-padding: 50;\n\n// Returns all of the icons with the color/stroke/stroke-width populated\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {map} - A map of all of the icons\n@function get-all-icons($color: null, $stroke-color: null, $stroke-width: 0) {\n\t// If null was sent in, it overrides the default parameters, so these are the defaults\n\t@if($color == null) { $color: $color-black; }\n\t@if($stroke-color == null) { $stroke-color: transparent; }\n\n\t// TODO: Update these icons with your own SVG icon paths\n\t// When creating a new icon path, make sure the SVG file is square, and $icon-svg-size in size\n\t// There should be $icon-svg-padding on all sides, and the icon should fill the entire space left inside the padding\n\t// If it is not a square icon, the largest dimension should fill the space and the other dimension should be centered\n\t$icons: (\n\t\tfacebook:\t(size: 23px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M171.3,62.2c-32.1-0.6-63.2,11.8-86.1,34.4C62,117.9,49,147.9,49.3,179.3v391.2 C49,602,62,632.1,85.3,653.4c22.9,22.6,53.9,35,86.1,34.4h225.8V445.4h-85v-94.5h85v-69.7c-2.2-34.2,10.4-67.7,34.6-92 c25.2-22.6,58.2-34.4,92.1-32.6c25.2-0.3,50.4,0.9,75.5,3.7v84.5l-51.7,0.4c-13.9-1.7-27.9,2.4-38.7,11.4 c-7.5,9.8-11.1,21.9-10.1,34.2V351h97.3l-13,94.5h-84.5V688h79.8c32.2,0.5,63.3-11.8,86.4-34.4c23.1-21.3,36-51.5,35.7-82.9V179.3 c0.3-31.4-12.6-61.6-35.7-82.9c-23.1-22.6-54.2-34.9-86.4-34.4H171.3V62.2z\"/>'),\n\t\tinstagram:\t(size: 23px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M618.7,608.1c-4.9,4.7-11.4,7.3-18.2,7.1H148.1c-6.9,0.2-13.5-2.3-18.5-7.1 c-4.9-4.6-7.5-11-7.4-17.7V327h59.8c-5.7,17.2-8.7,35.1-8.7,53.3c-0.5,50.9,21.2,99.5,59.2,133.2c38.6,36.3,89.8,56,142.8,55.1 c35.5,0.3,70.4-8.4,101.7-25.2c30.1-16,55.4-39.6,73.4-68.5c18-28.2,27.4-61.1,27.1-94.5c0.1-18-2.8-36.1-8.4-53.3h57.1v263.4 C626.5,597.2,623.8,603.7,618.7,608.1z M375.4,495.3c-34.2,0.7-67.3-12.1-92.2-35.6c-47.5-43.1-51-116.6-7.9-164.1 c2.5-2.8,5.1-5.4,7.9-7.9c52.4-47.4,132.2-47.4,184.6,0c47.5,42.7,51.3,115.8,8.7,163.3c-2.8,3-5.6,6-8.7,8.7 C442.9,483.2,409.7,496,375.4,495.3L375.4,495.3z M617.9,247.3c-5.6,5.4-12.9,8.3-20.6,8.2h-73.6c-7.7,0.2-15.2-2.8-20.6-8.2 c-5.6-5.1-8.8-12.3-8.7-19.9v-67c0-7.5,3.1-14.7,8.7-19.8c5.5-5.6,12.9-8.5,20.6-8.3h73.6c7.7-0.2,15.2,2.9,20.6,8.3 c5.5,5.1,8.5,12.2,8.4,19.8v67C626.5,235,623.4,242.2,617.9,247.3L617.9,247.3z M675.5,86.3c-15.7-15.4-36.9-23.9-59-23.6H133.4 c-22-0.4-43.3,8.1-59,23.6c-15.8,14.6-24.7,35-24.5,56.6v464.3c-0.3,21.4,8.7,42,24.5,56.6c15.7,15.5,36.9,24,59,23.6h483.1 c22,0.3,43.3-8.2,59-23.6c15.8-14.5,24.7-35,24.5-56.6V142.9C700.3,121.3,691.3,100.9,675.5,86.3L675.5,86.3z\"/>'),\n\t\tlinkedin:\t(size: 23px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M150.4,303.5h97.8v282h-97.8C150.4,585.5,150.4,303.5,150.4,303.5z M239.2,251.3 c-11.1,9.7-25.5,14.7-40.3,14h-0.5c-14.4,0.6-28.4-4.4-39.1-14c-9.7-8.9-15.2-21.6-15-34.7c-0.3-13.3,5.4-26.1,15.5-34.9 c11.1-9.5,25.4-14.5,39.9-13.9c14.5-0.7,28.6,4.3,39.4,13.9c9.7,9,15.2,21.6,15.2,34.9C254.6,229.8,249.1,242.5,239.2,251.3z M502,434.8c0-42.5-16.5-63.8-49.2-63.8c-11.3-0.3-22.3,3.1-31.3,10c-8.3,6.3-14.8,14.6-19,24.2c-2.4,7.4-3.5,15.1-3,22.8v157.7 h-97.8c0.8-170.1,0.8-264.2,0-282h97.8v41h-0.8c18.6-30.7,52.5-48.9,88.3-47.5c30.6-1.3,60.3,10.3,81.8,32.1 c22.2,26.4,33.2,60.3,30.7,94.7v161.7H502V434.8L502,434.8z M664.2,97.3c-22.9-22.5-54-34.9-86.1-34.4H171.8 c-32.1-0.6-63,11.8-85.9,34.4c-23.2,21.2-36.3,51.3-35.8,82.7v390.1c-0.3,31.4,12.7,61.5,35.8,82.7c22.9,22.5,53.8,34.9,85.9,34.3 h406.3c32.1,0.5,63.2-11.9,86.1-34.3c23-21.3,35.9-51.3,35.6-82.7V180C700.2,148.6,687.3,118.6,664.2,97.3z\"/>')\n\t);\n\n\t@return $icons;\n}\n\n// Gets the size of a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @return {Number} - the size of the icon\n@function get-svg-icon-size($icon-name) {\n\t$all-icons: get-all-icons();\n\t@return map-get(map-get($all-icons, $icon-name), size);\n}\n\n// Gets the path for a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {String} - the path for the icon\n@function get-svg-icon-path($icon-name, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t@if(unit($stroke-width) == 'px') {\n\t\t$size: get-svg-icon-size($icon-name);\n\t\t$stroke-width: convert-to-svg-value($stroke-width, $size);\n\t}\n\n\t$all-icons: get-all-icons($color, $stroke-color, $stroke-width);\n\n\t@return map-get(map-get($all-icons, $icon-name), path);\n}\n\n// Converts an \"external to svg\" value to an \"internal to svg\" value, accounting for the svg size\n// @param {Number} $val - The value to be converted\n// @param {Number} $external-svg-size - The size that the svg is actually rendered at\n// @param {Number} $svg-size - Optional. The size of the SVG svg\n// @return {Number} - The \"internal to svg\" value\n@function convert-to-svg-value($val, $external-svg-size, $svg-size: $icon-svg-size) {\n\t@if(unit($val) != unit($external-svg-size)) {\n\t\t@warn 'Error! Units do not match: ' + $external-unit + ', ' + $external-svg-size;\n\t\t@return $val;\n\t}\n\n\t@return ($val / $external-svg-size) * $svg-size;\n}\n\n// Returns a svg url for a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon. Default uses the size in the icon map for the $icon-name\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {String} - a url to the icon\n@function svg-icon($icon-name, $size-override: null, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t// Convert the stroke to svg units\n\t@if(unit($stroke-width) == 'px') {\n\t\t$size: $size-override;\n\t\t@if($size-override == null) {\n\t\t\t$size: get-svg-icon-size($icon-name);\n\t\t}\n\t\t$stroke-width: convert-to-svg-value($stroke-width, $size);\n\t}\n\n\t// The stroke is centered along the path\n\t$stroke-overhang: ($stroke-width / 2);\n\t\n\t$svg-size: $icon-svg-size - ($icon-svg-padding * 2) + ($stroke-overhang * 2);\n\t$offset: $icon-svg-padding - $stroke-overhang;\n\n\t$path: get-svg-icon-path($icon-name, $color, $stroke-color, $stroke-width);\n\t$svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"#{$svg-size}\" height=\"#{$svg-size}\" viewBox=\"#{$offset} #{$offset} #{$svg-size} #{$svg-size}\">#{$path}</svg>';\n\t@return 'data:image/svg+xml,#{url-encode($svg)}';\n}\n\n// All icons use these styles as a baseline\n// @param {String} $icon-name - Optional. The name of the icon that will added via another mixin (allows accurate sizing). Default uses $default-icon-size.\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n@mixin icon-base($icon-name: null, $size-override: null) {\n\t$size: $default-icon-size;\n\t\n\t@if($size-override) {\n\t\t$size: $size-override;\n\t} @else if($icon-name) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\n\tdisplay: inline-block;\n\twidth: $size;\n\theight: $size;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center center;\n\tbackground-size: $size;\n\tline-height: $size;\n}\n\n// The individual icon styles (assuming icon-base has been applied already)\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n@mixin icon($icon-name, $size-override: null, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t$size: $size-override;\n\t@if($size-override == null) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\twidth: $size;\n\theight: $size;\n\tbackground-image: url('#{svg-icon($icon-name, $size-override, $color, $stroke-color, $stroke-width)}');\n\tbackground-size: $size;\n\tline-height: $size;\n}\n\n// Positioning the icon to the appropriate size (assuming icon-base has been applied already)\n// @param {String} $which-side - Which side of the text the icon should be on.  Acceptable values are \"left\" or \"right\".\n// @param {Number} $size - Optional. The size of the icon. Default uses $default-icon-size.\n// @param {Number} $padding - Optional. The amount of space between the icon and text. Default uses $default-icon-padding\n@mixin icon-position($which-side, $size: $default-icon-size, $padding: $default-icon-padding) {\n\t@if($which-side == 'left') {\n\t\tpadding-left: ($padding + $size);\n\t\tbackground-position: left;\n\t} @else if($which-side == 'right') {\n\t\tpadding-right: ($padding + $size);\n\t\tbackground-position: right;\n\t}\n}\n\n// Resizing an icon (assuming icon-base has been applied already)\n// @param {Number} $size - The size of the icon.\n// @param {String} $which-side - Optional. Which side of the text the icon should be on. Acceptable values are \"left\", \"right\", or null. Defaults to center (null).\n// @param {Number} $padding - Optional. If the icon is to a side, the amount of space between the icon and text. Default uses $default-icon-padding\n@mixin icon-resize($size, $which-side: null, $padding: $default-icon-padding) {\n\theight: $size;\n\tbackground-size: $size;\n\tline-height: $size;\n\n\t@if($which-side == 'left') {\n\t\tpadding-left: ($padding + $size);\n\t} @else if($which-side == 'right') {\n\t\tpadding-right: ($padding + $size);\n\t} @else {\n\t\twidth: $size;\n\t}\n}\n\n// Puts an individual icon into a circle shape (assuming icon-base has been applied already)\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @param {Number} $padding - Optional. The amount of space between the icon and the edge of the circle. Default uses $default-icon-padding.\n@mixin icon-circle($icon-name, $size-override: null, $circle-color: $color-black, $color: $color-white, $stroke-color: null,  $stroke-width: 0, $icon-padding: $default-icon-padding) {\n\t$size: $size-override;\n\t@if($size-override == null) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\n\t@include icon($icon-name, $size, $color, $stroke-color, $stroke-width);\n\t@include icon-circle-size($size, $icon-padding);\n\tbackground-color: $circle-color;\n}\n\n// Resizes a circle icon (assuming icon-circle has been applied already)\n// @param {Number} $size - The size of the icon.\n// @param {Number} $padding - Optional. The amount of space between the icon and the edge of the circle. Default uses $default-icon-padding.\n@mixin icon-circle-size($size, $padding: null) {\n\t@if($padding == null) { $padding: $default-icon-padding; }\n\t$size-with-padding: $size + ($padding * 2);\n\n\twidth: $size-with-padding;\n\theight: $size-with-padding;\n\tborder-radius: $size-with-padding / 2;\n\tline-height: $size-with-padding;\n}\n","*,\n*:before,\n*:after {\n  box-sizing: border-box; }\n\nhtml {\n  font-size: 100%; }\n\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n  color: #595959;\n  font-family: \"Helvetica\", sans-serif;\n  font-size: 0.84375rem;\n  font-weight: 400;\n  line-height: 1.6;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%; }\n\na {\n  transition: color 0.3s;\n  color: #3498db;\n  text-decoration: none; }\n  a:hover, a:focus {\n    color: #2874a6;\n    text-decoration: underline; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: \"Georgia\", serif;\n  font-weight: 900;\n  line-height: 1.1; }\n\nh1 {\n  font-size: 2.66667rem; }\n\nh2 {\n  font-size: 1.5rem; }\n\nh4 {\n  font-size: 0.84375rem; }\n\nh5 {\n  font-size: 0.84375rem; }\n\nh6 {\n  font-size: 0.84375rem; }\n\nblockquote {\n  text-align: center; }\n\nhr {\n  height: 1px;\n  border: 0; }\n\ntable {\n  width: 100%; }\n\nimg {\n  max-width: 100%;\n  height: auto; }\n\nembed,\niframe,\nobject {\n  max-width: 100%; }\n\nb,\nstrong {\n  font-weight: 600; }\n\n.test__icon {\n  display: inline-block;\n  width: 25px;\n  height: 25px;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 25px;\n  line-height: 25px;\n  width: 25px;\n  height: 25px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='680' height='680' viewBox='35 35 680 680'%3E%3Cpath fill='%23999' stroke='%23000' stroke-width='30' d='M171.3,62.2c-32.1-0.6-63.2,11.8-86.1,34.4C62,117.9,49,147.9,49.3,179.3v391.2 C49,602,62,632.1,85.3,653.4c22.9,22.6,53.9,35,86.1,34.4h225.8V445.4h-85v-94.5h85v-69.7c-2.2-34.2,10.4-67.7,34.6-92 c25.2-22.6,58.2-34.4,92.1-32.6c25.2-0.3,50.4,0.9,75.5,3.7v84.5l-51.7,0.4c-13.9-1.7-27.9,2.4-38.7,11.4 c-7.5,9.8-11.1,21.9-10.1,34.2V351h97.3l-13,94.5h-84.5V688h79.8c32.2,0.5,63.3-11.8,86.4-34.4c23.1-21.3,36-51.5,35.7-82.9V179.3 c0.3-31.4-12.6-61.6-35.7-82.9c-23.1-22.6-54.2-34.9-86.4-34.4H171.3V62.2z'/%3E%3C/svg%3E\");\n  background-size: 25px;\n  line-height: 25px; }\n\n[class^='icon--'],\n[class*=' icon--'] {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 20px;\n  line-height: 20px; }\n\n.icon--facebook {\n  width: 23px;\n  height: 23px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M171.3,62.2c-32.1-0.6-63.2,11.8-86.1,34.4C62,117.9,49,147.9,49.3,179.3v391.2 C49,602,62,632.1,85.3,653.4c22.9,22.6,53.9,35,86.1,34.4h225.8V445.4h-85v-94.5h85v-69.7c-2.2-34.2,10.4-67.7,34.6-92 c25.2-22.6,58.2-34.4,92.1-32.6c25.2-0.3,50.4,0.9,75.5,3.7v84.5l-51.7,0.4c-13.9-1.7-27.9,2.4-38.7,11.4 c-7.5,9.8-11.1,21.9-10.1,34.2V351h97.3l-13,94.5h-84.5V688h79.8c32.2,0.5,63.3-11.8,86.4-34.4c23.1-21.3,36-51.5,35.7-82.9V179.3 c0.3-31.4-12.6-61.6-35.7-82.9c-23.1-22.6-54.2-34.9-86.4-34.4H171.3V62.2z'/%3E%3C/svg%3E\");\n  background-size: 23px;\n  line-height: 23px; }\n  .icon--facebook.icon--circle {\n    width: 23px;\n    height: 23px;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23fff' stroke='transparent' stroke-width='0' d='M171.3,62.2c-32.1-0.6-63.2,11.8-86.1,34.4C62,117.9,49,147.9,49.3,179.3v391.2 C49,602,62,632.1,85.3,653.4c22.9,22.6,53.9,35,86.1,34.4h225.8V445.4h-85v-94.5h85v-69.7c-2.2-34.2,10.4-67.7,34.6-92 c25.2-22.6,58.2-34.4,92.1-32.6c25.2-0.3,50.4,0.9,75.5,3.7v84.5l-51.7,0.4c-13.9-1.7-27.9,2.4-38.7,11.4 c-7.5,9.8-11.1,21.9-10.1,34.2V351h97.3l-13,94.5h-84.5V688h79.8c32.2,0.5,63.3-11.8,86.4-34.4c23.1-21.3,36-51.5,35.7-82.9V179.3 c0.3-31.4-12.6-61.6-35.7-82.9c-23.1-22.6-54.2-34.9-86.4-34.4H171.3V62.2z'/%3E%3C/svg%3E\");\n    background-size: 23px;\n    line-height: 23px;\n    width: 33px;\n    height: 33px;\n    border-radius: 16.5px;\n    line-height: 33px;\n    background-color: #000; }\n    .icon--facebook.icon--circle.icon--large {\n      width: 60px;\n      height: 60px;\n      border-radius: 30px;\n      line-height: 60px; }\n  .icon--facebook.icon--large {\n    height: 50px;\n    background-size: 50px;\n    line-height: 50px;\n    width: 50px; }\n  .icon--facebook.icon--left {\n    padding-left: 28px;\n    background-position: left;\n    width: auto; }\n    .icon--facebook.icon--left.icon--large {\n      height: 50px;\n      background-size: 50px;\n      line-height: 50px;\n      padding-left: 55px; }\n  .icon--facebook.icon--right {\n    padding-right: 28px;\n    background-position: right;\n    width: auto; }\n    .icon--facebook.icon--right.icon--large {\n      height: 50px;\n      background-size: 50px;\n      line-height: 50px;\n      padding-right: 55px; }\n\n.icon--instagram {\n  width: 23px;\n  height: 23px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M618.7,608.1c-4.9,4.7-11.4,7.3-18.2,7.1H148.1c-6.9,0.2-13.5-2.3-18.5-7.1 c-4.9-4.6-7.5-11-7.4-17.7V327h59.8c-5.7,17.2-8.7,35.1-8.7,53.3c-0.5,50.9,21.2,99.5,59.2,133.2c38.6,36.3,89.8,56,142.8,55.1 c35.5,0.3,70.4-8.4,101.7-25.2c30.1-16,55.4-39.6,73.4-68.5c18-28.2,27.4-61.1,27.1-94.5c0.1-18-2.8-36.1-8.4-53.3h57.1v263.4 C626.5,597.2,623.8,603.7,618.7,608.1z M375.4,495.3c-34.2,0.7-67.3-12.1-92.2-35.6c-47.5-43.1-51-116.6-7.9-164.1 c2.5-2.8,5.1-5.4,7.9-7.9c52.4-47.4,132.2-47.4,184.6,0c47.5,42.7,51.3,115.8,8.7,163.3c-2.8,3-5.6,6-8.7,8.7 C442.9,483.2,409.7,496,375.4,495.3L375.4,495.3z M617.9,247.3c-5.6,5.4-12.9,8.3-20.6,8.2h-73.6c-7.7,0.2-15.2-2.8-20.6-8.2 c-5.6-5.1-8.8-12.3-8.7-19.9v-67c0-7.5,3.1-14.7,8.7-19.8c5.5-5.6,12.9-8.5,20.6-8.3h73.6c7.7-0.2,15.2,2.9,20.6,8.3 c5.5,5.1,8.5,12.2,8.4,19.8v67C626.5,235,623.4,242.2,617.9,247.3L617.9,247.3z M675.5,86.3c-15.7-15.4-36.9-23.9-59-23.6H133.4 c-22-0.4-43.3,8.1-59,23.6c-15.8,14.6-24.7,35-24.5,56.6v464.3c-0.3,21.4,8.7,42,24.5,56.6c15.7,15.5,36.9,24,59,23.6h483.1 c22,0.3,43.3-8.2,59-23.6c15.8-14.5,24.7-35,24.5-56.6V142.9C700.3,121.3,691.3,100.9,675.5,86.3L675.5,86.3z'/%3E%3C/svg%3E\");\n  background-size: 23px;\n  line-height: 23px; }\n  .icon--instagram.icon--circle {\n    width: 23px;\n    height: 23px;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23fff' stroke='transparent' stroke-width='0' d='M618.7,608.1c-4.9,4.7-11.4,7.3-18.2,7.1H148.1c-6.9,0.2-13.5-2.3-18.5-7.1 c-4.9-4.6-7.5-11-7.4-17.7V327h59.8c-5.7,17.2-8.7,35.1-8.7,53.3c-0.5,50.9,21.2,99.5,59.2,133.2c38.6,36.3,89.8,56,142.8,55.1 c35.5,0.3,70.4-8.4,101.7-25.2c30.1-16,55.4-39.6,73.4-68.5c18-28.2,27.4-61.1,27.1-94.5c0.1-18-2.8-36.1-8.4-53.3h57.1v263.4 C626.5,597.2,623.8,603.7,618.7,608.1z M375.4,495.3c-34.2,0.7-67.3-12.1-92.2-35.6c-47.5-43.1-51-116.6-7.9-164.1 c2.5-2.8,5.1-5.4,7.9-7.9c52.4-47.4,132.2-47.4,184.6,0c47.5,42.7,51.3,115.8,8.7,163.3c-2.8,3-5.6,6-8.7,8.7 C442.9,483.2,409.7,496,375.4,495.3L375.4,495.3z M617.9,247.3c-5.6,5.4-12.9,8.3-20.6,8.2h-73.6c-7.7,0.2-15.2-2.8-20.6-8.2 c-5.6-5.1-8.8-12.3-8.7-19.9v-67c0-7.5,3.1-14.7,8.7-19.8c5.5-5.6,12.9-8.5,20.6-8.3h73.6c7.7-0.2,15.2,2.9,20.6,8.3 c5.5,5.1,8.5,12.2,8.4,19.8v67C626.5,235,623.4,242.2,617.9,247.3L617.9,247.3z M675.5,86.3c-15.7-15.4-36.9-23.9-59-23.6H133.4 c-22-0.4-43.3,8.1-59,23.6c-15.8,14.6-24.7,35-24.5,56.6v464.3c-0.3,21.4,8.7,42,24.5,56.6c15.7,15.5,36.9,24,59,23.6h483.1 c22,0.3,43.3-8.2,59-23.6c15.8-14.5,24.7-35,24.5-56.6V142.9C700.3,121.3,691.3,100.9,675.5,86.3L675.5,86.3z'/%3E%3C/svg%3E\");\n    background-size: 23px;\n    line-height: 23px;\n    width: 33px;\n    height: 33px;\n    border-radius: 16.5px;\n    line-height: 33px;\n    background-color: #000; }\n    .icon--instagram.icon--circle.icon--large {\n      width: 60px;\n      height: 60px;\n      border-radius: 30px;\n      line-height: 60px; }\n  .icon--instagram.icon--large {\n    height: 50px;\n    background-size: 50px;\n    line-height: 50px;\n    width: 50px; }\n  .icon--instagram.icon--left {\n    padding-left: 28px;\n    background-position: left;\n    width: auto; }\n    .icon--instagram.icon--left.icon--large {\n      height: 50px;\n      background-size: 50px;\n      line-height: 50px;\n      padding-left: 55px; }\n  .icon--instagram.icon--right {\n    padding-right: 28px;\n    background-position: right;\n    width: auto; }\n    .icon--instagram.icon--right.icon--large {\n      height: 50px;\n      background-size: 50px;\n      line-height: 50px;\n      padding-right: 55px; }\n\n.icon--linkedin {\n  width: 23px;\n  height: 23px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23000' stroke='transparent' stroke-width='0' d='M150.4,303.5h97.8v282h-97.8C150.4,585.5,150.4,303.5,150.4,303.5z M239.2,251.3 c-11.1,9.7-25.5,14.7-40.3,14h-0.5c-14.4,0.6-28.4-4.4-39.1-14c-9.7-8.9-15.2-21.6-15-34.7c-0.3-13.3,5.4-26.1,15.5-34.9 c11.1-9.5,25.4-14.5,39.9-13.9c14.5-0.7,28.6,4.3,39.4,13.9c9.7,9,15.2,21.6,15.2,34.9C254.6,229.8,249.1,242.5,239.2,251.3z M502,434.8c0-42.5-16.5-63.8-49.2-63.8c-11.3-0.3-22.3,3.1-31.3,10c-8.3,6.3-14.8,14.6-19,24.2c-2.4,7.4-3.5,15.1-3,22.8v157.7 h-97.8c0.8-170.1,0.8-264.2,0-282h97.8v41h-0.8c18.6-30.7,52.5-48.9,88.3-47.5c30.6-1.3,60.3,10.3,81.8,32.1 c22.2,26.4,33.2,60.3,30.7,94.7v161.7H502V434.8L502,434.8z M664.2,97.3c-22.9-22.5-54-34.9-86.1-34.4H171.8 c-32.1-0.6-63,11.8-85.9,34.4c-23.2,21.2-36.3,51.3-35.8,82.7v390.1c-0.3,31.4,12.7,61.5,35.8,82.7c22.9,22.5,53.8,34.9,85.9,34.3 h406.3c32.1,0.5,63.2-11.9,86.1-34.3c23-21.3,35.9-51.3,35.6-82.7V180C700.2,148.6,687.3,118.6,664.2,97.3z'/%3E%3C/svg%3E\");\n  background-size: 23px;\n  line-height: 23px; }\n  .icon--linkedin.icon--circle {\n    width: 23px;\n    height: 23px;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='650' height='650' viewBox='50 50 650 650'%3E%3Cpath fill='%23fff' stroke='transparent' stroke-width='0' d='M150.4,303.5h97.8v282h-97.8C150.4,585.5,150.4,303.5,150.4,303.5z M239.2,251.3 c-11.1,9.7-25.5,14.7-40.3,14h-0.5c-14.4,0.6-28.4-4.4-39.1-14c-9.7-8.9-15.2-21.6-15-34.7c-0.3-13.3,5.4-26.1,15.5-34.9 c11.1-9.5,25.4-14.5,39.9-13.9c14.5-0.7,28.6,4.3,39.4,13.9c9.7,9,15.2,21.6,15.2,34.9C254.6,229.8,249.1,242.5,239.2,251.3z M502,434.8c0-42.5-16.5-63.8-49.2-63.8c-11.3-0.3-22.3,3.1-31.3,10c-8.3,6.3-14.8,14.6-19,24.2c-2.4,7.4-3.5,15.1-3,22.8v157.7 h-97.8c0.8-170.1,0.8-264.2,0-282h97.8v41h-0.8c18.6-30.7,52.5-48.9,88.3-47.5c30.6-1.3,60.3,10.3,81.8,32.1 c22.2,26.4,33.2,60.3,30.7,94.7v161.7H502V434.8L502,434.8z M664.2,97.3c-22.9-22.5-54-34.9-86.1-34.4H171.8 c-32.1-0.6-63,11.8-85.9,34.4c-23.2,21.2-36.3,51.3-35.8,82.7v390.1c-0.3,31.4,12.7,61.5,35.8,82.7c22.9,22.5,53.8,34.9,85.9,34.3 h406.3c32.1,0.5,63.2-11.9,86.1-34.3c23-21.3,35.9-51.3,35.6-82.7V180C700.2,148.6,687.3,118.6,664.2,97.3z'/%3E%3C/svg%3E\");\n    background-size: 23px;\n    line-height: 23px;\n    width: 33px;\n    height: 33px;\n    border-radius: 16.5px;\n    line-height: 33px;\n    background-color: #000; }\n    .icon--linkedin.icon--circle.icon--large {\n      width: 60px;\n      height: 60px;\n      border-radius: 30px;\n      line-height: 60px; }\n  .icon--linkedin.icon--large {\n    height: 50px;\n    background-size: 50px;\n    line-height: 50px;\n    width: 50px; }\n  .icon--linkedin.icon--left {\n    padding-left: 28px;\n    background-position: left;\n    width: auto; }\n    .icon--linkedin.icon--left.icon--large {\n      height: 50px;\n      background-size: 50px;\n      line-height: 50px;\n      padding-left: 55px; }\n  .icon--linkedin.icon--right {\n    padding-right: 28px;\n    background-position: right;\n    width: auto; }\n    .icon--linkedin.icon--right.icon--large {\n      height: 50px;\n      background-size: 50px;\n      line-height: 50px;\n      padding-right: 55px; }\n","// TODO: Remove the icon styles that you do not need. If they are highly customized (no common color, different sizes depending on context), simply remove these files and create the icons as needed\n$block: 'icon';\n\n[class^='#{$block}--'],\n[class*=' #{$block}--'] {\n\t@include icon-base;\n}\n\n@each $icon in get-all-icons() {\n\t$key: nth($icon, 1);\n  \t$value: nth($icon, 2);\n\n  \t.#{$block}--#{$key} {\n  \t\t$default-icon-size-larger: 50px;\n  \t\t@include icon($key);\n\n  \t\t&.#{$block}--circle {\n\t\t\t@include icon-circle($key);\n\n\t\t\t&.#{$block}--large {\n\t\t\t\t@include icon-circle-size($default-icon-size-larger);\n\t\t\t}\n\t\t}\n\n\t\t&.#{$block}--large {\n\t\t\t@include icon-resize($default-icon-size-larger);\n\t\t}\n\n\t\t&.#{$block}--left {\n\t\t\t@include icon-position(left, map-get($value, size));\n\t\t\twidth: auto;\n\n\t\t\t&.#{$block}--large {\n\t\t\t\t@include icon-resize($default-icon-size-larger, left);\n\t\t\t}\n\t\t}\n\n\t\t&.#{$block}--right {\n\t\t\t@include icon-position(right, map-get($value, size));\n\t\t\twidth: auto;\n\n\t\t\t&.#{$block}--large {\n\t\t\t\t@include icon-resize($default-icon-size-larger, right);\n\t\t\t}\n\t\t}\n  \t}\n}\n"]}