{"version":3,"sources":["../../source/assets/css/patternlab-specific.scss","../../source/assets/css/_partials/_patternlab-specific/_colors.scss","../../source/assets/css/_partials/_patternlab-specific/_fonts.scss","../../source/assets/css/_partials/_global/_icons.scss","../../source/assets/css/_partials/_patternlab-specific/_icons.scss"],"names":[],"mappings":"AAOA,aACC,mBAAA,qBAAA,WAAA,qBACA,UAAA,KACA,QAAA,EAAA,KACA,UAGA,UAAA,IACA,YAAA,EACA,UAGA,MAAA,IACA,OAAA,KAAA,KACA,QAAA,KACA,WAAA,OACA,WCtBA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,cAAA,KAAA,UAAA,KACA,OAAA,YACA,QAAA,YACA,WAAA,eALD,cAQE,iBAAA,EAAA,SAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KACA,UAAA,IACA,UAAA,IACA,OAAA,EAAA,KAAA,KAAA,EACA,QAAA,KAAA,KACA,OAAA,IAAA,MAAA,KACA,mBAAA,EAAA,EAAA,IAAA,KAAA,WAAA,EAAA,EAAA,IAAA,KAdF,oBAiBG,QAAA,MACA,WAAA,SACA,UAAA,IACA,kBAKF,WAAA,KACA,MAAA,KAFD,wBAIW,QAAA,OAA8B,oCAIxC,WAAA,eADD,0CAGW,QAAA,kBAAgD,8BAI1D,WAAA,eADD,oCAGW,QAAA,kBAA0C,mCAIpD,WAAA,eACA,MAAA,KAFD,yCAIW,QAAA,kBAA+C,kBAIzD,WAAA,KADD,wBAGW,QAAA,OAA8B,iBAIxC,WAAA,KACA,MAAA,KAFD,uBAIW,QAAA,OAA6B,uBAIvC,WAAA,QADD,6BAGW,QAAA,UAAmC,yBAI7C,WAAA,QADD,+BAGW,QAAA,UAAqC,0BAI/C,WAAA,QADD,gCAGW,QAAA,UAAsC,sBAIhD,WAAA,QACA,MAAA,KAFD,4BAIW,QAAA,UAAkC,wBAI5C,WAAA,KACA,MAAA,KAFD,8BAIW,QAAA,OAAoC,yBAI9C,WAAA,QACA,MAAA,KAFD,+BAIW,QAAA,UAAqC,iBAI/C,WAAA,QACA,MAAA,KAFD,uBAIW,QAAA,UAA6B,wBAIvC,WAAA,QACA,MAAA,KAFD,8BAIW,QAAA,UAAoC,mBAAA,qBC9G7C,YAAA,SAAA,CAAA,qBAHF,oCAeE,YAAA,IACA,qBAAA,uBAMA,YAAA,OAAA,CAAA,gBACA,uBAAA,oBCoFD,QAAA,aACA,MAAA,KACA,OAAA,KACA,kBAAA,UACA,oBAAA,OAAA,OACA,gBAAA,KACA,YAAA,KC5GA,oBD0HA,MAAA,KACA,OAAA,KACA,iBAAA,+tBACA,gBAAA,KACA,YAAA,KCvHG,aAAA,KACA,eAAA,OAHD,qBDqHF,MAAA,KACA,OAAA,KACA,iBAAA,i1CACA,gBAAA,KACA,YAAA,KCvHG,aAAA,KACA,eAAA,OAHD,oBDqHF,MAAA,KACA,OAAA,KACA,iBAAA,imCACA,gBAAA,KACA,YAAA,KCvHG,aAAA,KACA,eAAA","file":"patternlab-specific.min.css","sourcesContent":["/////\n///// This stylesheet is for styles you want to include only when displaying demo\n///// styles for grids, animations, color swatches, etc.\n///// These styles will not be your production CSS.\n///// \n@import 'global-imports';\n\n#sg-patterns { // sass-lint:disable-line no-ids\n\tbox-sizing: border-box !important; // sass-lint:disable-line no-important\n\tmax-width: 100%;\n\tpadding: 0 .5em;\n}\n\n.sg-label {\n\tfont-size: 90%;\n\tline-height: 1;\n}\n\n.sg-panel {\n\twidth: 60%;\n\tmargin: 30px auto;\n\tpadding: 30px;\n\ttext-align: center;\n}\n\n@import '_partials/_patternlab-specific/colors';\n@import '_partials/_patternlab-specific/fonts';\n@import '_partials/_patternlab-specific/icons';\n",".sg-colors {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tmargin: 0 !important; // sass-lint:disable-line no-important\n\tpadding: 0 !important; // sass-lint:disable-line no-important\n\tlist-style: none !important; // sass-lint:disable-line no-important\n\n\tli {\n\t\tflex: 0 1 auto;\n\t\tmin-width: 15%;\n\t\tmax-width: 40%;\n\t\tmargin: 0 15px 15px 0;\n\t\tpadding: 10px 20px;\n\t\tborder: 5px solid $color-white;\n\t\tbox-shadow: 0 0 2px $color-border;\n\n\t\t&:after {\n\t\t\tdisplay: block;\n\t\t\tmargin-top: rem-calc(5);\n\t\t\tfont-size: 70%;\n\t\t}\n\t}\n}\n\n.sg-colors--black {\n\tbackground: $color-black;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-black}'; }\n}\n\n.sg-colors--black-transparent-light {\n\tbackground: $color-black-transparent-light;\n\n\t&:after { content: '#{$color-black-transparent-light}'; }\n}\n\n.sg-colors--black-transparent {\n\tbackground: $color-black-transparent;\n\n\t&:after { content: '#{$color-black-transparent}'; }\n}\n\n.sg-colors--black-transparent-dark {\n\tbackground: $color-black-transparent-dark;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-black-transparent-dark}'; }\n}\n\n.sg-colors--white {\n\tbackground: $color-white;\n\n\t&:after { content: '#{$color-white}'; }\n}\n\n.sg-colors--gray {\n\tbackground: $color-gray;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-gray}'; }\n}\n\n.sg-colors--gray-light {\n\tbackground: $color-gray-light;\n\n\t&:after { content: '#{$color-gray-light}'; }\n}\n\n.sg-colors--gray-lighter {\n\tbackground: $color-gray-lighter;\n\n\t&:after { content: '#{$color-gray-lighter}'; }\n}\n\n.sg-colors--gray-lightest {\n\tbackground: $color-gray-lightest;\n\n\t&:after { content: '#{$color-gray-lightest}'; }\n}\n\n.sg-colors--gray-dark {\n\tbackground: $color-gray-dark;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-gray-dark}'; }\n}\n\n.sg-colors--gray-darker {\n\tbackground: $color-gray-darker;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-gray-darker}'; }\n}\n\n.sg-colors--gray-darkest {\n\tbackground: $color-gray-darkest;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-gray-darkest}'; }\n}\n\n.sg-colors--blue {\n\tbackground: $color-blue;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-blue}'; }\n}\n\n.sg-colors--blue-darker {\n\tbackground: $color-blue-darker;\n\tcolor: $color-white;\n\n\t&:after { content: '#{$color-blue-darker}'; }\n}\n",".sg-fonts--primary {\n\t&,\n\t* {\n\t\tfont-family: $font-family-primary !important; // sass-lint:disable-line no-important\n\t}\n\n\t// .sg-fonts--light {\n\t// \tfont-weight: map-get($font-weights-primary, light);\n\t// }\n\n\t// .sg-fonts--medium {\n\t// \tfont-weight: map-get($font-weights-primary, medium);\n\t// }\n\n\t.sg-fonts--black {\n\t\tfont-weight: map-get($font-weights-primary, black); // sass-lint:disable-line no-color-keywords no-color-literals\n\t}\n}\n\n.sg-fonts--secondary {\n\t&,\n\t* {\n\t\tfont-family: $font-family-secondary !important; // sass-lint:disable-line no-important\n\t}\n\n\t// .sg-fonts--light {\n\t// \tfont-weight: map-get($font-weights-secondary, light);\n\t// }\n\n\t// .sg-fonts--medium {\n\t// \tfont-weight: map-get($font-weights-secondary, medium);\n\t// }\n\n\t// .sg-fonts--black {\n\t// \tfont-weight: map-get($font-weights-secondary, black); // sass-lint:disable-line no-color-keywords no-color-literals\n\t// }\n}\n","$default-icon-size: 20px;\n$default-icon-padding: 5px;\n$icon-svg-size: 750;\n$icon-svg-padding: 50;\n\n// Returns all of the icons with the color/stroke/stroke-width populated\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {map} - A map of all of the icons\n@function get-all-icons($color: null, $stroke-color: null, $stroke-width: 0) {\n\t// If null was sent in, it overrides the default parameters, so these are the defaults\n\t@if($color == null) { $color: $color-black; }\n\t@if($stroke-color == null) { $stroke-color: transparent; }\n\n\t// TODO: Update these icons with your own SVG icon paths\n\t// When creating a new icon path, make sure the SVG file is square, and $icon-svg-size in size\n\t// There should be $icon-svg-padding on all sides, and the icon should fill the entire space left inside the padding\n\t// If it is not a square icon, the largest dimension should fill the space and the other dimension should be centered\n\t$icons: (\n\t\tfacebook:\t(size: 23px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M171.3,62.2c-32.1-0.6-63.2,11.8-86.1,34.4C62,117.9,49,147.9,49.3,179.3v391.2 C49,602,62,632.1,85.3,653.4c22.9,22.6,53.9,35,86.1,34.4h225.8V445.4h-85v-94.5h85v-69.7c-2.2-34.2,10.4-67.7,34.6-92 c25.2-22.6,58.2-34.4,92.1-32.6c25.2-0.3,50.4,0.9,75.5,3.7v84.5l-51.7,0.4c-13.9-1.7-27.9,2.4-38.7,11.4 c-7.5,9.8-11.1,21.9-10.1,34.2V351h97.3l-13,94.5h-84.5V688h79.8c32.2,0.5,63.3-11.8,86.4-34.4c23.1-21.3,36-51.5,35.7-82.9V179.3 c0.3-31.4-12.6-61.6-35.7-82.9c-23.1-22.6-54.2-34.9-86.4-34.4H171.3V62.2z\"/>'),\n\t\tinstagram:\t(size: 23px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M618.7,608.1c-4.9,4.7-11.4,7.3-18.2,7.1H148.1c-6.9,0.2-13.5-2.3-18.5-7.1 c-4.9-4.6-7.5-11-7.4-17.7V327h59.8c-5.7,17.2-8.7,35.1-8.7,53.3c-0.5,50.9,21.2,99.5,59.2,133.2c38.6,36.3,89.8,56,142.8,55.1 c35.5,0.3,70.4-8.4,101.7-25.2c30.1-16,55.4-39.6,73.4-68.5c18-28.2,27.4-61.1,27.1-94.5c0.1-18-2.8-36.1-8.4-53.3h57.1v263.4 C626.5,597.2,623.8,603.7,618.7,608.1z M375.4,495.3c-34.2,0.7-67.3-12.1-92.2-35.6c-47.5-43.1-51-116.6-7.9-164.1 c2.5-2.8,5.1-5.4,7.9-7.9c52.4-47.4,132.2-47.4,184.6,0c47.5,42.7,51.3,115.8,8.7,163.3c-2.8,3-5.6,6-8.7,8.7 C442.9,483.2,409.7,496,375.4,495.3L375.4,495.3z M617.9,247.3c-5.6,5.4-12.9,8.3-20.6,8.2h-73.6c-7.7,0.2-15.2-2.8-20.6-8.2 c-5.6-5.1-8.8-12.3-8.7-19.9v-67c0-7.5,3.1-14.7,8.7-19.8c5.5-5.6,12.9-8.5,20.6-8.3h73.6c7.7-0.2,15.2,2.9,20.6,8.3 c5.5,5.1,8.5,12.2,8.4,19.8v67C626.5,235,623.4,242.2,617.9,247.3L617.9,247.3z M675.5,86.3c-15.7-15.4-36.9-23.9-59-23.6H133.4 c-22-0.4-43.3,8.1-59,23.6c-15.8,14.6-24.7,35-24.5,56.6v464.3c-0.3,21.4,8.7,42,24.5,56.6c15.7,15.5,36.9,24,59,23.6h483.1 c22,0.3,43.3-8.2,59-23.6c15.8-14.5,24.7-35,24.5-56.6V142.9C700.3,121.3,691.3,100.9,675.5,86.3L675.5,86.3z\"/>'),\n\t\tlinkedin:\t(size: 23px, path: '<path fill=\"#{$color}\" stroke=\"#{$stroke-color}\" stroke-width=\"#{$stroke-width}\" d=\"M150.4,303.5h97.8v282h-97.8C150.4,585.5,150.4,303.5,150.4,303.5z M239.2,251.3 c-11.1,9.7-25.5,14.7-40.3,14h-0.5c-14.4,0.6-28.4-4.4-39.1-14c-9.7-8.9-15.2-21.6-15-34.7c-0.3-13.3,5.4-26.1,15.5-34.9 c11.1-9.5,25.4-14.5,39.9-13.9c14.5-0.7,28.6,4.3,39.4,13.9c9.7,9,15.2,21.6,15.2,34.9C254.6,229.8,249.1,242.5,239.2,251.3z M502,434.8c0-42.5-16.5-63.8-49.2-63.8c-11.3-0.3-22.3,3.1-31.3,10c-8.3,6.3-14.8,14.6-19,24.2c-2.4,7.4-3.5,15.1-3,22.8v157.7 h-97.8c0.8-170.1,0.8-264.2,0-282h97.8v41h-0.8c18.6-30.7,52.5-48.9,88.3-47.5c30.6-1.3,60.3,10.3,81.8,32.1 c22.2,26.4,33.2,60.3,30.7,94.7v161.7H502V434.8L502,434.8z M664.2,97.3c-22.9-22.5-54-34.9-86.1-34.4H171.8 c-32.1-0.6-63,11.8-85.9,34.4c-23.2,21.2-36.3,51.3-35.8,82.7v390.1c-0.3,31.4,12.7,61.5,35.8,82.7c22.9,22.5,53.8,34.9,85.9,34.3 h406.3c32.1,0.5,63.2-11.9,86.1-34.3c23-21.3,35.9-51.3,35.6-82.7V180C700.2,148.6,687.3,118.6,664.2,97.3z\"/>')\n\t);\n\n\t@return $icons;\n}\n\n// Gets the size of a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @return {Number} - the size of the icon\n@function get-svg-icon-size($icon-name) {\n\t$all-icons: get-all-icons();\n\t@return map-get(map-get($all-icons, $icon-name), size);\n}\n\n// Gets the path for a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {String} - the path for the icon\n@function get-svg-icon-path($icon-name, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t@if(unit($stroke-width) == 'px') {\n\t\t$size: get-svg-icon-size($icon-name);\n\t\t$stroke-width: convert-to-svg-value($stroke-width, $size);\n\t}\n\n\t$all-icons: get-all-icons($color, $stroke-color, $stroke-width);\n\n\t@return map-get(map-get($all-icons, $icon-name), path);\n}\n\n// Converts an \"external to svg\" value to an \"internal to svg\" value, accounting for the svg size\n// @param {Number} $val - The value to be converted\n// @param {Number} $external-svg-size - The size that the svg is actually rendered at\n// @param {Number} $svg-size - Optional. The size of the SVG svg\n// @return {Number} - The \"internal to svg\" value\n@function convert-to-svg-value($val, $external-svg-size, $svg-size: $icon-svg-size) {\n\t@if(unit($val) != unit($external-svg-size)) {\n\t\t@warn 'Error! Units do not match: ' + $external-unit + ', ' + $external-svg-size;\n\t\t@return $val;\n\t}\n\n\t@return ($val / $external-svg-size) * $svg-size;\n}\n\n// Returns a svg url for a single icon\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon. Default uses the size in the icon map for the $icon-name\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @return {String} - a url to the icon\n@function svg-icon($icon-name, $size-override: null, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t// Convert the stroke to svg units\n\t@if(unit($stroke-width) == 'px') {\n\t\t$size: $size-override;\n\t\t@if($size-override == null) {\n\t\t\t$size: get-svg-icon-size($icon-name);\n\t\t}\n\t\t$stroke-width: convert-to-svg-value($stroke-width, $size);\n\t}\n\n\t// The stroke is centered along the path\n\t$stroke-overhang: ($stroke-width / 2);\n\t\n\t$svg-size: $icon-svg-size - ($icon-svg-padding * 2) + ($stroke-overhang * 2);\n\t$offset: $icon-svg-padding - $stroke-overhang;\n\n\t$path: get-svg-icon-path($icon-name, $color, $stroke-color, $stroke-width);\n\t$svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"#{$svg-size}\" height=\"#{$svg-size}\" viewBox=\"#{$offset} #{$offset} #{$svg-size} #{$svg-size}\">#{$path}</svg>';\n\t@return 'data:image/svg+xml,#{url-encode($svg)}';\n}\n\n// All icons use these styles as a baseline\n// @param {String} $icon-name - Optional. The name of the icon that will added via another mixin (allows accurate sizing). Default uses $default-icon-size.\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n@mixin icon-base($icon-name: null, $size-override: null) {\n\t$size: $default-icon-size;\n\t\n\t@if($size-override) {\n\t\t$size: $size-override;\n\t} @else if($icon-name) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\n\tdisplay: inline-block;\n\twidth: $size;\n\theight: $size;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center center;\n\tbackground-size: $size;\n\tline-height: $size;\n}\n\n// The individual icon styles (assuming icon-base has been applied already)\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n@mixin icon($icon-name, $size-override: null, $color: null, $stroke-color: null, $stroke-width: 0) {\n\t$size: $size-override;\n\t@if($size-override == null) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\twidth: $size;\n\theight: $size;\n\tbackground-image: url('#{svg-icon($icon-name, $size-override, $color, $stroke-color, $stroke-width)}');\n\tbackground-size: $size;\n\tline-height: $size;\n}\n\n// Positioning the icon to the appropriate size (assuming icon-base has been applied already)\n// @param {String} $which-side - Which side of the text the icon should be on.  Acceptable values are \"left\" or \"right\".\n// @param {Number} $size - Optional. The size of the icon. Default uses $default-icon-size.\n// @param {Number} $padding - Optional. The amount of space between the icon and text. Default uses $default-icon-padding\n@mixin icon-position($which-side, $size: $default-icon-size, $padding: $default-icon-padding) {\n\t@if($which-side == 'left') {\n\t\tpadding-left: ($padding + $size);\n\t\tbackground-position: left;\n\t} @else if($which-side == 'right') {\n\t\tpadding-right: ($padding + $size);\n\t\tbackground-position: right;\n\t}\n}\n\n// Resizing an icon (assuming icon-base has been applied already)\n// @param {Number} $size - The size of the icon.\n// @param {String} $which-side - Optional. Which side of the text the icon should be on. Acceptable values are \"left\", \"right\", or null. Defaults to center (null).\n// @param {Number} $padding - Optional. If the icon is to a side, the amount of space between the icon and text. Default uses $default-icon-padding\n@mixin icon-resize($size, $which-side: null, $padding: $default-icon-padding) {\n\theight: $size;\n\tbackground-size: $size;\n\tline-height: $size;\n\n\t@if($which-side == 'left') {\n\t\tpadding-left: ($padding + $size);\n\t} @else if($which-side == 'right') {\n\t\tpadding-right: ($padding + $size);\n\t} @else {\n\t\twidth: $size;\n\t}\n}\n\n// Puts an individual icon into a circle shape (assuming icon-base has been applied already)\n// @param {String} $icon-name - The name of the icon (corresponding to the key in the map)\n// @param {Number} $size-override - Optional. The size of the icon (prioritized over if an $icon-name is sent in). Default uses $default-icon-size.\n// @param {Color} $color - Optional. The color to be used for the fill. Defaults to black.\n// @param {Color} $stroke-color - Optional. The color to be used for the stroke. Defaults to transparent.\n// @param {Number} $stroke-width - Optional. The width to be used for the stroke. Defaults to 0.\n// @param {Number} $padding - Optional. The amount of space between the icon and the edge of the circle. Default uses $default-icon-padding.\n@mixin icon-circle($icon-name, $size-override: null, $circle-color: $color-black, $color: $color-white, $stroke-color: null,  $stroke-width: 0, $icon-padding: $default-icon-padding) {\n\t$size: $size-override;\n\t@if($size-override == null) {\n\t\t$size: get-svg-icon-size($icon-name);\n\t}\n\n\t@include icon($icon-name, $size, $color, $stroke-color, $stroke-width);\n\t@include icon-circle-size($size, $icon-padding);\n\tbackground-color: $circle-color;\n}\n\n// Resizes a circle icon (assuming icon-circle has been applied already)\n// @param {Number} $size - The size of the icon.\n// @param {Number} $padding - Optional. The amount of space between the icon and the edge of the circle. Default uses $default-icon-padding.\n@mixin icon-circle-size($size, $padding: null) {\n\t@if($padding == null) { $padding: $default-icon-padding; }\n\t$size-with-padding: $size + ($padding * 2);\n\n\twidth: $size-with-padding;\n\theight: $size-with-padding;\n\tborder-radius: $size-with-padding / 2;\n\tline-height: $size-with-padding;\n}\n","$block: 'sg-icons';\n\n[class^='#{$block}--'],\n[class*=' #{$block}--'] {\n\t@include icon-base;\n}\n\n@each $icon in get-all-icons() {\n\t$key: nth($icon, 1);\n\n  \t.#{$block}--#{$key} {\n  \t\t@include icon($key);\n  \t\tmargin-right: 10px;\n  \t\tvertical-align: middle;\n  \t}\n}\n"]}